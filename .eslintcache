[{"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\index.js":"1","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\App.js":"2","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\MainContent.js":"3","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\SideNav\\SideNav.js":"4","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Profile\\Profile.js":"5","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\Test.js":"6","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Practice\\Practice.js":"7","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Read\\Read.js":"8","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Practice\\ScrollMenu.js":"9"},{"size":213,"mtime":1609320115774,"results":"10","hashOfConfig":"11"},{"size":826,"mtime":1609320111262,"results":"12","hashOfConfig":"11"},{"size":24408,"mtime":1609237880541,"results":"13","hashOfConfig":"11"},{"size":2309,"mtime":1609247373774,"results":"14","hashOfConfig":"11"},{"size":124,"mtime":1609238133770,"results":"15","hashOfConfig":"11"},{"size":106,"mtime":1609237753033,"results":"16","hashOfConfig":"11"},{"size":4150,"mtime":1609350168689,"results":"17","hashOfConfig":"11"},{"size":106,"mtime":1609237760136,"results":"18","hashOfConfig":"11"},{"size":1609,"mtime":1609351478614,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1odiqfb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\index.js",[],["42","43"],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\App.js",["44"],"import {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink,\n\tRedirect,\n} from \"react-router-dom\";\n\nimport SideNav from \"./components/SideNav/SideNav\";\nimport Profile from \"./views/Profile/Profile\";\nimport Test from \"./views/Test/Test\";\nimport Practice from \"./views/Practice/Practice\";\nimport Read from \"./views/Read/Read\";\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<SideNav />\n\t\t\t<main className=\"mainContent\" id=\"mainContent\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/read\">\n\t\t\t\t\t\t<Read />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/practice\">\n\t\t\t\t\t\t<Practice />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/test\">\n\t\t\t\t\t\t<Test />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t\t<Profile />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Redirect from=\"*\" to=\"/profile\" />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\MainContent.js",[],["45","46"],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\SideNav\\SideNav.js",["47"],"import React, { useState } from \"react\";\r\nimport { ReactComponent as ToggleOpenIcon } from \"../../assets/sidenav/toggleOpen.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ReactComponent as ProfileIcon } from \"../../assets/sidenav/Profile.svg\";\r\nimport { ReactComponent as PracticeIcon } from \"../../assets/sidenav/Practice.svg\";\r\nimport { ReactComponent as TestIcon } from \"../../assets/sidenav/Test.svg\";\r\nimport { ReactComponent as ReadIcon } from \"../../assets/sidenav/Read.svg\";\r\nimport { ReactComponent as DPIcon } from \"../../assets/sidenav/dp.svg\";\r\nimport { ReactComponent as LogoutIcon } from \"../../assets/sidenav/Logout.svg\";\r\nimport \"./sideNav.css\";\r\nconst NavTextWithIcon = (props) => {\r\n\tconst { icon, text } = props;\r\n\treturn (\r\n\t\t<NavLink\r\n\t\t\tclassName=\"sideNav-text-with-icon\"\r\n\t\t\tto={`/${text}`}\r\n\t\t\tactiveClassName={\"side-nav-link-active\"}\r\n\t\t>\r\n\t\t\t<span className=\"sideNav-link-icon\">{icon}</span>\r\n\t\t\t<span className=\"sideNav-link-text\">{text}</span>\r\n\t\t</NavLink>\r\n\t);\r\n};\r\nconst SideNav = () => {\r\n\tconst [isOpen, setIsOpen] = useState(true);\r\n\r\n\tconst toggle = () => {\r\n\t\tif (isOpen) {\r\n\t\t\tsetIsOpen(false);\r\n\t\t\tdocument.getElementById(\"sideNav\").style.width = \"7.4rem\";\r\n\t\t\tdocument.getElementById(\"mainContent\").style.marginLeft = \"7.4rem\";\r\n\t\t} else {\r\n\t\t\tsetIsOpen(true);\r\n\t\t\tdocument.getElementById(\"sideNav\").style.width = \"20rem\";\r\n\t\t\tdocument.getElementById(\"mainContent\").style.marginLeft = \"20rem\";\r\n\t\t}\r\n\t};\r\n\t// const toggle = () => setIsOpen(!isOpen);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`sideNav ${isOpen ? \"sideNav-open\" : \"sideNav-close\"}`}\r\n\t\t\tid=\"sideNav\"\r\n\t\t>\r\n\t\t\t<button onClick={toggle} className=\"sideNav-toggler\">\r\n\t\t\t\t{isOpen ? <ToggleOpenIcon /> : <ToggleOpenIcon />}\r\n\t\t\t</button>\r\n\t\t\t{/* <div>\r\n\t\t\t\t<span className=\"sideNav-link-icon\">{<DPIcon />}</span>\r\n\t\t\t\t<span>Hi! deepak</span>\r\n\t\t\t</div> */}\r\n\t\t\t{/* <NavTextWithIcon icon={<DPIcon />} text=\"Hi! Ayush\" /> */}\r\n\t\t\t<NavTextWithIcon icon={<ProfileIcon id=\"profileIcon\" />} text=\"profile\" />\r\n\t\t\t<NavTextWithIcon icon={<ReadIcon />} text=\"read\" />\r\n\t\t\t<NavTextWithIcon icon={<TestIcon />} text=\"test\" />\r\n\t\t\t<NavTextWithIcon icon={<PracticeIcon />} text=\"practice\" />\r\n\t\t\t<NavTextWithIcon icon={<LogoutIcon id=\"logoutIcon\" />} text=\"logout\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SideNav;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Profile\\Profile.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\Test.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Practice\\Practice.js",["48"],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Read\\Read.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Practice\\ScrollMenu.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":2,"nodeType":"55","messageId":"56","endLine":5,"endColumn":6},{"ruleId":"49","replacedBy":"57"},{"ruleId":"51","replacedBy":"58"},{"ruleId":"53","severity":1,"message":"59","line":8,"column":28,"nodeType":"55","messageId":"56","endLine":8,"endColumn":34},{"ruleId":"60","severity":1,"message":"61","line":103,"column":6,"nodeType":"62","endLine":107,"endColumn":8},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["63"],["64"],"'DPIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]