[{"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\index.js":"1","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\App.js":"2","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\SideNav\\SideNav.js":"3","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Profile\\Profile.js":"4","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\Test.js":"5","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Practice\\Practice.js":"6","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Read\\Read.js":"7","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\SingleTest.js":"8","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\ProgressBar\\ProgressBar.js":"9","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\FormikControl.js":"10","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\Input.js":"11","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\Select.js":"12","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\CheckboxGroup.js":"13","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\Textarea.js":"14","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\CustomCheckBoxGroup.js":"15","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\RadioButtons.js":"16","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\FilePicker.js":"17","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\TextError.js":"18","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\reducers\\1RootReducer.js":"19","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Login\\Login.js":"20","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Layout\\DashBoardLayout.js":"21","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\actions\\authActions.js":"22","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\constants\\authConstants.js":"23","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\history.js":"24","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\PrivateRoute.js":"25","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Collapse.js":"26","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Login\\SetProfile.js":"27","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\CustomRadioGroup.js":"28","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Practice\\PracticeBySubject\\PracticeBySubject.js":"29","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\actions\\practiceBySubjectActions.js":"30","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\constants\\practiceConstants.js":"31","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\reducers\\praticeBySubjectReducer.js":"32","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\CustomSpinner.js":"33","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\reducers\\readReducer.js":"34","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\constants\\readConstants.js":"35","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\hooks\\useIsMount.js":"36","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\actions\\readActions.js":"37","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Read\\FilteredRead.js":"38","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Read\\ReadBook.js":"39","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\ScrollMenu.js":"40","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\TimerClock.jsx":"41","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\QuestionsScroll.js":"42","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\CustomModal.js":"43","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\TestResults.jsx":"44","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\SinglePractice.js":"45","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\helpers\\getColorById.js":"46","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Shared\\PerSubjectPractice.js":"47","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Shared\\SubjectModules.js":"48","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\PracticeResults.jsx":"49"},{"size":2268,"mtime":1611904731421,"results":"50","hashOfConfig":"51"},{"size":1296,"mtime":1611255755788,"results":"52","hashOfConfig":"51"},{"size":2540,"mtime":1612164246742,"results":"53","hashOfConfig":"51"},{"size":3190,"mtime":1612164941411,"results":"54","hashOfConfig":"51"},{"size":3997,"mtime":1612177958142,"results":"55","hashOfConfig":"51"},{"size":2992,"mtime":1611650316361,"results":"56","hashOfConfig":"51"},{"size":2375,"mtime":1610441551829,"results":"57","hashOfConfig":"51"},{"size":11008,"mtime":1612150530708,"results":"58","hashOfConfig":"51"},{"size":298,"mtime":1609592336365,"results":"59","hashOfConfig":"51"},{"size":958,"mtime":1609999872412,"results":"60","hashOfConfig":"51"},{"size":472,"mtime":1609932678408,"results":"61","hashOfConfig":"51"},{"size":630,"mtime":1609593498323,"results":"62","hashOfConfig":"51"},{"size":2081,"mtime":1609603560811,"results":"63","hashOfConfig":"51"},{"size":428,"mtime":1609593498328,"results":"64","hashOfConfig":"51"},{"size":2446,"mtime":1609603514321,"results":"65","hashOfConfig":"51"},{"size":1168,"mtime":1609999986913,"results":"66","hashOfConfig":"51"},{"size":579,"mtime":1609603582008,"results":"67","hashOfConfig":"51"},{"size":122,"mtime":1609593642988,"results":"68","hashOfConfig":"51"},{"size":508,"mtime":1610439314607,"results":"69","hashOfConfig":"51"},{"size":4318,"mtime":1611245595098,"results":"70","hashOfConfig":"51"},{"size":2067,"mtime":1611726639320,"results":"71","hashOfConfig":"51"},{"size":1179,"mtime":1609757711539,"results":"72","hashOfConfig":"51"},{"size":208,"mtime":1609751112376,"results":"73","hashOfConfig":"51"},{"size":130,"mtime":1609757063727,"results":"74","hashOfConfig":"51"},{"size":637,"mtime":1609757868171,"results":"75","hashOfConfig":"51"},{"size":285,"mtime":1609829988633,"results":"76","hashOfConfig":"51"},{"size":2144,"mtime":1610180557518,"results":"77","hashOfConfig":"51"},{"size":2506,"mtime":1611560234150,"results":"78","hashOfConfig":"51"},{"size":2502,"mtime":1612165285195,"results":"79","hashOfConfig":"51"},{"size":660,"mtime":1610195283448,"results":"80","hashOfConfig":"51"},{"size":189,"mtime":1610195214701,"results":"81","hashOfConfig":"51"},{"size":316,"mtime":1610195369781,"results":"82","hashOfConfig":"51"},{"size":1070,"mtime":1611907061590,"results":"83","hashOfConfig":"51"},{"size":991,"mtime":1611246067892,"results":"84","hashOfConfig":"51"},{"size":165,"mtime":1610438845394,"results":"85","hashOfConfig":"51"},{"size":210,"mtime":1610438649532,"results":"86","hashOfConfig":"51"},{"size":758,"mtime":1610450730829,"results":"87","hashOfConfig":"51"},{"size":4446,"mtime":1611935217384,"results":"88","hashOfConfig":"51"},{"size":2506,"mtime":1611908249957,"results":"89","hashOfConfig":"51"},{"size":1758,"mtime":1611141223839,"results":"90","hashOfConfig":"51"},{"size":900,"mtime":1611741620403,"results":"91","hashOfConfig":"51"},{"size":1054,"mtime":1611166054040,"results":"92","hashOfConfig":"51"},{"size":504,"mtime":1611170300896,"results":"93","hashOfConfig":"51"},{"size":2371,"mtime":1611941213619,"results":"94","hashOfConfig":"51"},{"size":11651,"mtime":1612150401839,"results":"95","hashOfConfig":"51"},{"size":326,"mtime":1611685367818,"results":"96","hashOfConfig":"51"},{"size":2576,"mtime":1612165314038,"results":"97","hashOfConfig":"51"},{"size":4243,"mtime":1612149962862,"results":"98","hashOfConfig":"51"},{"size":1304,"mtime":1611943181467,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1odiqfb",{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"102"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"102"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"102"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"102"},"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\index.js",[],["222","223"],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\App.js",["224"],"import { Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport Login from \"views/Login/Login\";\nimport DashBoardLayout from \"components/Layout/DashBoardLayout\";\nimport history from \"./history\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport SetProfile from \"views/Login/SetProfile\";\nconst App = () => {\n\t//axios\n\taxios.interceptors.request.use(\n\t\t(request) => {\n\t\t\t// console.log(request);\n\t\t\t// Edit request config\n\t\t\treturn request;\n\t\t},\n\t\t(error) => {\n\t\t\tconsole.log(error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t);\n\n\tconst accessToken = useSelector((state) => {\n\t\tif (state.firebase.auth.stsTokenManager)\n\t\t\treturn state.firebase.auth.stsTokenManager.accessToken;\n\t});\n\n\taxios.defaults.baseURL = \"https://classcast-198812.appspot.com\";\n\taxios.defaults.headers[\"Authorization\"] = accessToken;\n\taxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<Switch>\n\t\t\t\t<PrivateRoute path=\"/admin\" component={DashBoardLayout} />\n\t\t\t\t<Route path=\"/auth/login\">\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/auth/setProfile\">\n\t\t\t\t\t<SetProfile />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect from=\"*\" to=\"/admin\" />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\SideNav\\SideNav.js",["225"],"import React, { useState } from \"react\";\r\nimport { ReactComponent as ToggleOpenIcon } from \"../../assets/sidenav/toggleOpen.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ReactComponent as ProfileIcon } from \"../../assets/sidenav/Profile.svg\";\r\nimport { ReactComponent as PracticeIcon } from \"../../assets/sidenav/Practice.svg\";\r\nimport { ReactComponent as TestIcon } from \"../../assets/sidenav/Test.svg\";\r\nimport { ReactComponent as ReadIcon } from \"../../assets/sidenav/Read.svg\";\r\nimport { ReactComponent as DPIcon } from \"../../assets/sidenav/dp.svg\";\r\nimport { ReactComponent as LogoutIcon } from \"../../assets/sidenav/Logout.svg\";\r\nimport \"./sideNav.css\";\r\nimport { signOut } from \"store/actions/authActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst NavTextWithIcon = (props) => {\r\n\tconst { icon, text, onClick } = props;\r\n\treturn (\r\n\t\t<NavLink\r\n\t\t\tclassName=\"sideNav-text-with-icon\"\r\n\t\t\tto={`/admin/${text}`}\r\n\t\t\tactiveClassName={\"side-nav-link-active\"}\r\n\t\t>\r\n\t\t\t<span className=\"sideNav-link-icon\">{icon}</span>\r\n\t\t\t<span className=\"sideNav-link-text\" onClick={onClick}>\r\n\t\t\t\t{text}\r\n\t\t\t</span>\r\n\t\t</NavLink>\r\n\t);\r\n};\r\nconst SideNav = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [isOpen, setIsOpen] = useState(true);\r\n\r\n\tconst toggle = () => {\r\n\t\tif (isOpen) {\r\n\t\t\tsetIsOpen(false);\r\n\t\t\tdocument.getElementById(\"sideNav\").style.width = \"7.4rem\";\r\n\t\t\tdocument.getElementById(\"mainContent\").style.marginLeft = \"7.4rem\";\r\n\t\t} else {\r\n\t\t\tsetIsOpen(true);\r\n\t\t\tdocument.getElementById(\"sideNav\").style.width = \"20rem\";\r\n\t\t\tdocument.getElementById(\"mainContent\").style.marginLeft = \"20rem\";\r\n\t\t}\r\n\t};\r\n\t// const toggle = () => setIsOpen(!isOpen);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`sideNav ${isOpen ? \"sideNav-open\" : \"sideNav-close\"}`}\r\n\t\t\tid=\"sideNav\"\r\n\t\t>\r\n\t\t\t<button onClick={toggle} className=\"sideNav-toggler\">\r\n\t\t\t\t{isOpen ? <ToggleOpenIcon /> : <ToggleOpenIcon />}\r\n\t\t\t</button>\r\n\t\t\t{/* <div>\r\n\t\t\t\t<span className=\"sideNav-link-icon\">{<DPIcon />}</span>\r\n\t\t\t\t<span>Hi! deepak</span>\r\n\t\t\t</div> */}\r\n\t\t\t{/* <NavTextWithIcon icon={<DPIcon />} text=\"Hi! Ayush\" /> */}\r\n\t\t\t<NavTextWithIcon icon={<PracticeIcon />} text=\"practice\" />\r\n\t\t\t<NavTextWithIcon icon={<TestIcon />} text=\"test\" />\r\n\t\t\t<NavTextWithIcon icon={<ReadIcon />} text=\"read\" />\r\n\t\t\t<NavTextWithIcon icon={<ProfileIcon id=\"profileIcon\" />} text=\"profile\" />\r\n\t\t\t<NavTextWithIcon\r\n\t\t\t\ticon={<LogoutIcon id=\"logoutIcon\" />}\r\n\t\t\t\ttext=\"logout\"\r\n\t\t\t\tonClick={() => dispatch(signOut())}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SideNav;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Profile\\Profile.js",["226","227","228","229","230","231","232","233","234","235"],"import { ReactComponent as Group16681 } from \"../../assets/profile/Group 1668-1.svg\";\r\nimport { ReactComponent as Group16682 } from \"../../assets/profile/Group 1668-2.svg\";\r\nimport { ReactComponent as Group16683 } from \"../../assets/profile/Group 1668-3.svg\";\r\nimport { ReactComponent as Group16684 } from \"../../assets/profile/Group 1668-4.svg\";\r\nimport { ReactComponent as Group16685 } from \"../../assets/profile/Group 1668-5.svg\";\r\nimport { ReactComponent as Group1668 } from \"../../assets/profile/Group 1668.svg\";\r\nimport { ReactComponent as Group1674 } from \"../../assets/profile/Group 1674.svg\";\r\nimport { ReactComponent as Group1637 } from \"../../assets/profile/Group 1637.svg\";\r\nimport { ReactComponent as EditSquare } from \"../../assets/profile/EditSquare.svg\";\r\nimport { ReactComponent as DPIcon } from \"../../assets/sidenav/dp.svg\";\r\n\r\nimport style from \"./profile.module.css\";\r\nimport ProgressBar from \"components/ProgressBar/ProgressBar\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst UserProfile = () => {\r\n\tconst [points, setPoints] = useState(0);\r\n\tconst instituteId = useSelector((state) => state.instituteId);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst response = await axios.get(`/content/get_points/${instituteId}/`);\r\n\t\t\tsetPoints(response.data.points);\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, [instituteId]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* <button className={style.editSquare}>\r\n\t\t\t\t<EditSquare />\r\n\t\t\t</button> */}\r\n\t\t\t<DPIcon className={style.dp} />\r\n\t\t\t<h2 className={`info text-align-center ${style.name}`}>Deepak Jha</h2>\r\n\t\t\t<h2 className={`info text-align-center ${style.class}`}>Class 10</h2>\r\n\t\t\t<div className={style.pointsScoredContainer}>\r\n\t\t\t\t<Group1637 />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className={style.points}>{points}</div>\r\n\t\t\t\t\t<h2 className={style.pointsScored}>Points Scored</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst ProgressCard = () => {\r\n\treturn (\r\n\t\t<div className={style.progressCardContainer}>\r\n\t\t\t<div className={style.header}>\r\n\t\t\t\t<h2>Learning Track Completion</h2>\r\n\t\t\t\t<div>50%</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={style.lessons}>\r\n\t\t\t\t<span>22 lessons</span>\r\n\t\t\t\t<span>44 lessons</span>\r\n\t\t\t</div>\r\n\t\t\t<ProgressBar progress={\"50%\"} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Profile = () => {\r\n\tconst listSubjects = (block, text) => {\r\n\t\treturn (\r\n\t\t\t<div className={style.subjectBlock}>\r\n\t\t\t\t{block}\r\n\t\t\t\t<div>{text}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={style.profileContainer}>\r\n\t\t\t<h1 className=\"secondary text-align-center\">Profile</h1>\r\n\t\t\t<UserProfile />\r\n\t\t\t{/* <div className={style.subjectsContainer}>\r\n\t\t\t\t{listSubjects(<Group16685 />, \"All\")}\r\n\t\t\t\t{listSubjects(<Group1668 />, \"Maths\")}\r\n\t\t\t\t{listSubjects(<Group1674 />, \"Science\")}\r\n\t\t\t\t{listSubjects(<Group16681 />, \"English\")}\r\n\t\t\t\t{listSubjects(<Group16684 />, \"Social Sciences\")}\r\n\t\t\t\t{listSubjects(<Group16682 />, \"Kannada\")}\r\n\t\t\t\t{listSubjects(<Group16683 />, \"Hindi\")}\r\n\t\t\t</div>\r\n\t\t\t<div className={style.progressContainer}>\r\n\t\t\t\t{[1, 2, 3, 4, 5, 6, 7, 8, 9].map(() => (\r\n\t\t\t\t\t<ProgressCard />\r\n\t\t\t\t))}\r\n\t\t\t</div> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\Test.js",["236","237","238","239","240"],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Practice\\Practice.js",["241","242","243"],"import style from \"./practice.module.css\";\r\nimport { ReactComponent as OverallScoreIcon } from \"../../assets/stats/OverallScore.svg\";\r\nimport { ReactComponent as TestAttemptsIcon } from \"../../assets/stats/TestAttempts.svg\";\r\nimport { ReactComponent as TopicsPracticedIcon } from \"../../assets/stats/TopicsPracticed.svg\";\r\nimport { ReactComponent as ViewDashBoardIcon } from \"../../assets/stats/ViewDashBoardIcon.svg\";\r\n\r\nimport ScrollMenu from \"../../components/ScrollMenu\";\r\nimport PracticeBySubject from \"./PracticeBySubject/PracticeBySubject\";\r\nconst Statistics = () => {\r\n\tconst listBlock = (block, value) => {\r\n\t\treturn (\r\n\t\t\t<div className={style.statisticsBlock}>\r\n\t\t\t\t{block}\r\n\t\t\t\t<div className={style.statisticsBlockValue}>{value}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2 className={` ${style.h2}`}>Your Statistics</h2>\r\n\t\t\t<div className={style.statistics}>\r\n\t\t\t\t{listBlock(<OverallScoreIcon />, 123)}\r\n\t\t\t\t{listBlock(<TestAttemptsIcon />, 123)}\r\n\t\t\t\t{listBlock(<TopicsPracticedIcon />, 123)}\r\n\t\t\t\t{listBlock(<ViewDashBoardIcon />)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst Continue = () => {\r\n\tconst fakeItems = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n\tconst listBlock = () => {\r\n\t\treturn fakeItems.map((item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={style.continueCard} key={item}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\"https://images.unsplash.com/photo-1609269310346-e03f6800ca12?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={style.title}>\r\n\t\t\t\t\t\tAcid bases and salts explained {item}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={style.subTitle}>By Ramesh Prasad</div>\r\n\t\t\t\t\t<button className={style.filledButton}>Continue</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2 className={`${style.h2}`}>Continue where you left</h2>\r\n\t\t\t<ScrollMenu menuItems={listBlock()} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst RsCorner = () => {\r\n\tconst listBlock = () => {\r\n\t\treturn [1, 2, 3, 4, 5, 6, 7, 8, 9].map((item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={style.rsCornerCard} key={item}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\"https://images.unsplash.com/photo-1609269310346-e03f6800ca12?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={style.title}>\r\n\t\t\t\t\t\tHow I scored 98/100 without coaching\r\n\t\t\t\t\t\t<div className={style.subTitle}>By Anukriti Pattopadhya</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className={style.filledButton}>Read</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2 className={`${style.h2}`}>Rs Corner</h2>\r\n\t\t\t<ScrollMenu menuItems={listBlock()} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst Practice = (props) => {\r\n\treturn (\r\n\t\t<div className={style.root}>\r\n\t\t\t<h1 className=\"secondary text-align-center\">Practice</h1>\r\n\t\t\t<Statistics />\r\n\t\t\t{/* <Continue /> */}\r\n\t\t\t<PracticeBySubject {...props} />\r\n\t\t\t{/* <RsCorner /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Practice;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Read\\Read.js",["244","245","246","247","248","249","250","251"],"import axios from \"axios\";\r\nimport Collapse from \"components/Collapse\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ReactComponent as MindMapsIcon } from \"../../assets/read/Group 1631.svg\";\r\nimport { ReactComponent as RevisionNotesIcon } from \"../../assets/read/Group 1632.svg\";\r\nimport { ReactComponent as PastYearIcon } from \"../../assets/read/Group 1633.svg\";\r\nimport { ReactComponent as FormulasIcon } from \"../../assets/read/Group 1634.svg\";\r\nimport { ReactComponent as NcertBooksIcon } from \"../../assets/read/Group 1650.svg\";\r\n\r\nimport { ReactComponent as ArrowRightCircleIcon } from \"../../assets/subjects/ArrowRightCircle.svg\";\r\nimport style from \"./read.module.css\";\r\nimport { useIsMount } from \"components/hooks/useIsMount\";\r\nimport { fetchReadables } from \"store/actions/readActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Read = () => {\r\n\tconst history = useHistory();\r\n\tconst isMount = useIsMount();\r\n\tconst dispatch = useDispatch();\r\n\tconst { loading, error, data, types } = useSelector(\r\n\t\t(state) => state.readables\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isMount) {\r\n\t\t\tdispatch(fetchReadables());\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// useEffect(() => {\r\n\t// \tObject.values(types).map(({ name }) =>\r\n\t// \t\tconsole.log(\r\n\t// \t\t\t_.filter(data, (item) => item.parent.includes(name)),\r\n\t// \t\t\tname\r\n\t// \t\t)\r\n\t// \t);\r\n\t// }, [data]);\r\n\r\n\tconst getIconByName = (name) => {\r\n\t\tswitch (name) {\r\n\t\t\tcase \"Mind Maps\":\r\n\t\t\t\treturn <MindMapsIcon />;\r\n\t\t\tcase \"Past Year\":\r\n\t\t\t\treturn <PastYearIcon />;\r\n\t\t\tcase \"Revision Notes\":\r\n\t\t\t\treturn <RevisionNotesIcon />;\r\n\t\t\tcase \"Textbooks\":\r\n\t\t\t\treturn <NcertBooksIcon />;\r\n\t\t\tcase \"Formulas\":\r\n\t\t\t\treturn <FormulasIcon />;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst listBlock = () => {\r\n\t\treturn Object.values(types).map(({ name }) => (\r\n\t\t\t<div className={style.readBlock} key={name}>\r\n\t\t\t\t{getIconByName(name)}\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={style.readArrow}\r\n\t\t\t\t\tonClick={() => history.push(`/admin/read/${name}`)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ArrowRightCircleIcon style={{ height: \"7.3rem\", width: \"7.3rem\" }} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1 className=\"secondary text-align-center\">Read</h1>\r\n\t\t\t<div className={style.read}>{listBlock()}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Read;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\SingleTest.js",["252","253","254","255","256","257","258","259","260","261"],"import FormikControl from \"components/Formik/FormikControl\";\r\nimport { Form, Formik } from \"formik\";\r\n\r\nimport style from \"./singleTest.module.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport TimerClock from \"./TimerClock\";\r\nimport QuestionsScroll from \"./QuestionsScroll\";\r\nimport TestResults from \"./TestResults\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport CustomSpinner from \"components/CustomSpinner\";\r\n\r\nconst SingleTest = () => {\r\n\tconst [options, setOptions] = useState([]);\r\n\tconst timerClockRef = useRef(null);\r\n\tconst { testId } = useParams();\r\n\tconst formikRef = useRef();\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [studentAnswers, setStudentAnswers] = useState({});\r\n\tconst [question, setQuestion] = useState(<p></p>);\r\n\tconst [solution, setSolution] = useState(\"\");\r\n\tconst [showSolution, setShowSolution] = useState(false);\r\n\r\n\tconst [testData, setTestData] = useState([]);\r\n\tconst [testMeta, setTestMeta] = useState({});\r\n\r\n\tconst [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\tconst [initialValues, setInitialValues] = useState({\r\n\t\toption: Number(studentAnswers[Number(currentQuestionIndex)]),\r\n\t});\r\n\tconst instituteId = useSelector((state) => state.instituteId);\r\n\r\n\tconst fetchTestMeta = async () => {\r\n\t\tconst response = await axios.get(`/content/test_meta/${testId}/`);\r\n\t\tsetTestMeta(response.data.data);\r\n\t};\r\n\tconst fetchData = async () => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await axios.get(\r\n\t\t\t\t`/content/test_data_v2/${instituteId}/${testId}`\r\n\t\t\t);\r\n\t\t\tsetTestData(response.data.data);\r\n\t\t\tsetLoading(false);\r\n\t\t\t// console.log(response.data.data);\r\n\t\t} catch (error) {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchTestMeta();\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t//setting first question\r\n\t\tif (testData.length > 0) {\r\n\t\t\tchangeQuestion(0);\r\n\t\t}\r\n\t}, [testData]);\r\n\r\n\tuseEffect(() => {\r\n\t\t//if user has answered a question it iw stored in an object\r\n\t\t//which is accessed whenever that question is again viewed\r\n\t\tsetInitialValues({\r\n\t\t\toption: Number(studentAnswers[Number(currentQuestionIndex)]),\r\n\t\t});\r\n\t}, [currentQuestionIndex]);\r\n\r\n\tconst [studentTestData, setStudentTestData] = useState({});\r\n\tconst handleStudentTestData = () => {\r\n\t\tconst {\r\n\t\t\tis_option_1_correct,\r\n\t\t\tis_option_2_correct,\r\n\t\t\tis_option_3_correct,\r\n\t\t\tis_option_4_correct,\r\n\t\t\tmax_marks,\r\n\t\t\tnegative_marks,\r\n\t\t} = testData[currentQuestionIndex];\r\n\t\tconst options = [\r\n\t\t\tis_option_1_correct,\r\n\t\t\tis_option_2_correct,\r\n\t\t\tis_option_3_correct,\r\n\t\t\tis_option_4_correct,\r\n\t\t];\r\n\r\n\t\tconst answer = formikRef.current && formikRef.current.values.option;\r\n\t\tif (!answer) return null;\r\n\t\telse if (options[Number(answer) - 1]) {\r\n\t\t\tsetStudentTestData((ans) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...ans,\r\n\t\t\t\t\t[Number(currentQuestionIndex)]: {\r\n\t\t\t\t\t\tcorrect: true,\r\n\t\t\t\t\t\tattempt: true,\r\n\t\t\t\t\t\tmax_marks,\r\n\t\t\t\t\t\tnegative_marks,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetStudentTestData((ans) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...ans,\r\n\t\t\t\t\t[Number(currentQuestionIndex)]: {\r\n\t\t\t\t\t\tcorrect: false,\r\n\t\t\t\t\t\tattempt: true,\r\n\t\t\t\t\t\tmax_marks,\r\n\t\t\t\t\t\tnegative_marks,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst [stats, setStats] = useState({\r\n\t\tcorrect: 0,\r\n\t\tattempt: 0,\r\n\t\tscore: 0,\r\n\t\ttotalQuestions: 0,\r\n\t});\r\n\tconst calculateStats = () => {\r\n\t\tconst { h, m, s } = timerClockRef.current.state;\r\n\t\tsetStats(() => {\r\n\t\t\treturn {\r\n\t\t\t\tcorrect: 0,\r\n\t\t\t\tattempt: 0,\r\n\t\t\t\tscore: 0,\r\n\t\t\t\ttotalQuestions: testData.length,\r\n\t\t\t\ttimeTaken: `${testMeta.duration_minutes - m - 1} mins ${60 - s}  sec`,\r\n\t\t\t\ttotalMarks: testData.reduce((acc, obj) => acc + obj.max_marks, 0),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn Object.values(studentTestData).map((question) => {\r\n\t\t\tif (question.attempt) {\r\n\t\t\t\tsetStats((prevState) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tattempt: prevState.attempt + 1,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tif (question.correct) {\r\n\t\t\t\t\treturn setStats((prevState) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tcorrect: prevState.correct + 1,\r\n\t\t\t\t\t\t\tscore: prevState.score + question.max_marks,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn setStats((prevState) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tscore: prevState.score - question.negative_marks,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst changeQuestion = (value, answer, shouldNotScroll) => {\r\n\t\tif (currentQuestionIndex + value === testData.length) {\r\n\t\t\t// timerClockRef.current.stop();\r\n\t\t\treturn endTestHandler();\r\n\t\t}\r\n\t\tif (formikRef.current && formikRef.current.values.option) {\r\n\t\t\tsetStudentAnswers((ans) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...ans,\r\n\t\t\t\t\t[currentQuestionIndex]: Number(formikRef.current.values.option),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (testData[currentQuestionIndex + value].question_type != 6) {\r\n\t\t\thandleStudentTestData();\r\n\t\t}\r\n\t\tsetCurrentQuestionIndex(currentQuestionIndex + value);\r\n\t\tconst {\r\n\t\t\toption_1,\r\n\t\t\toption_2,\r\n\t\t\toption_3,\r\n\t\t\toption_4,\r\n\t\t\tquestion,\r\n\t\t\tsolution,\r\n\t\t} = testData[currentQuestionIndex + value];\r\n\t\t//putting 4 options in an array and setting it whenever question changes\r\n\t\tsetQuestion(question);\r\n\t\tsetSolution(solution);\r\n\t\tif (testData[currentQuestionIndex + value].question_type != 6) {\r\n\t\t\tsetOptions(\r\n\t\t\t\tObject.values({ option_1, option_2, option_3, option_4 }).filter((x) =>\r\n\t\t\t\t\tBoolean(x)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tformikRef.current && formikRef.current.resetForm();\r\n\t\t!shouldNotScroll && executeScroll();\r\n\t};\r\n\r\n\tconst [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n\tconst onSubmit = (values, submitProps) => {\r\n\t\t//saving user option\r\n\t\tsetStudentAnswers((ans) => {\r\n\t\t\treturn { ...ans, [currentQuestionIndex]: Number(values.option) };\r\n\t\t});\r\n\t\tconst {\r\n\t\t\tis_option_1_correct,\r\n\t\t\tis_option_2_correct,\r\n\t\t\tis_option_3_correct,\r\n\t\t\tis_option_4_correct,\r\n\t\t} = testData[currentQuestionIndex];\r\n\t\tconst checkOptions = [\r\n\t\t\tis_option_1_correct,\r\n\t\t\tis_option_2_correct,\r\n\t\t\tis_option_3_correct,\r\n\t\t\tis_option_4_correct,\r\n\t\t];\r\n\r\n\t\t// changeQuestion(1);\r\n\t\t// submitProps.resetForm();\r\n\t\tif (checkOptions[Number(values.option) - 1]) {\r\n\t\t\tsetCorrectAnswers((ca) => ca + 1);\r\n\t\t}\r\n\t\t// submitProps.resetForm();\r\n\t\tchangeQuestion(1);\r\n\t\t//same concept as pulling options\r\n\t\t//we pull which options are correct arrange them in array\r\n\t\t//then check it it's true since we get the option number from\r\n\t\t//values object which comes from formik valus.option\r\n\r\n\t\t// if (!values.option) {\r\n\t\t// \tchangeQuestion(1);\r\n\t\t// \tsubmitProps.resetForm();\r\n\t\t// } else if (checkOptions[Number(values.option) - 1]) {\r\n\t\t// \tchangeQuestion(1);\r\n\t\t// \tsubmitProps.resetForm();\r\n\t\t// } else {\r\n\t\t// \t// console.log(submitProps);\r\n\t\t// \tsubmitProps.setErrors({ option: values.option });\r\n\t\t// }\r\n\t};\r\n\tconst questionButtonRef = useRef(null);\r\n\tconst dummyRef = useRef(null);\r\n\tconst executeScroll = () => {\r\n\t\t// console.log(questionButtonRef.current);\r\n\t\tquestionButtonRef.current &&\r\n\t\t\tquestionButtonRef.current.scrollIntoView({\r\n\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\tblock: \"center\",\r\n\t\t\t\tinline: \"center\",\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst onOpenModal = () => setOpen(true);\r\n\tconst onCloseModal = () => setOpen(false);\r\n\tconst [endTest, setEndTest] = useState(false);\r\n\tconst [stopTime, setStopTime] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (endTest) {\r\n\t\t\t// setStopTime(true);\r\n\t\t\tcalculateStats();\r\n\t\t\tonOpenModal();\r\n\t\t\tsetEndTest(false);\r\n\t\t}\r\n\t}, [studentTestData]);\r\n\r\n\tconst endTestHandler = () => {\r\n\t\tsetStopTime(true);\r\n\t\ttimerClockRef.current.stop();\r\n\t\tsetEndTest(() => true);\r\n\t\tif (formikRef.current.values.option) {\r\n\t\t\tchangeQuestion(0);\r\n\t\t} else {\r\n\t\t\tcalculateStats();\r\n\t\t\tonOpenModal();\r\n\t\t\tsetEndTest(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn loading ? (\r\n\t\t<>\r\n\t\t\t<CustomSpinner />\r\n\t\t</>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={onCloseModal}\r\n\t\t\t\tcenter\r\n\t\t\t\tclassNames={{\r\n\t\t\t\t\t// overlay: \"customOverlay\",\r\n\t\t\t\t\tmodal: \"customModal\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TestResults\r\n\t\t\t\t\t\tchangeQuestion={changeQuestion}\r\n\t\t\t\t\t\tshowSolution={(value) => setShowSolution(value)}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tonCloseModal();\r\n\t\t\t\t\t\t\tsetShowSolution(true);\r\n\t\t\t\t\t\t\t// changeQuestion(-testData.length + 1);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstats={stats}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<QuestionsScroll\r\n\t\t\t\t\tdummyRef={dummyRef}\r\n\t\t\t\t\tchangeQuestion={changeQuestion}\r\n\t\t\t\t\tquestionButtonRef={questionButtonRef}\r\n\t\t\t\t\tquestionsLength={testData.length}\r\n\t\t\t\t\tcurrentQuestionIndex={currentQuestionIndex}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={style.qaContainer}>\r\n\t\t\t\t\t<div className={style.timerContainer}>\r\n\t\t\t\t\t\t{testMeta.duration_minutes && testData.length > 0 && (\r\n\t\t\t\t\t\t\t<TimerClock\r\n\t\t\t\t\t\t\t\ttimerClockRef={timerClockRef}\r\n\t\t\t\t\t\t\t\ttime={testMeta.duration_minutes}\r\n\t\t\t\t\t\t\t\tendTestHandler={endTestHandler}\r\n\t\t\t\t\t\t\t\tstopTime={stopTime}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={style.endButton}\r\n\t\t\t\t\t\t\tonClick={stopTime ? onOpenModal : endTestHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{stopTime ? \"View Results\" : \"End\"}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={style.question}>\r\n\t\t\t\t\t\t<span className={style.questionNumber}>\r\n\t\t\t\t\t\t\tQ {currentQuestionIndex + 1}{\" \"}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t__html: question,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tinitialValues={initialValues}\r\n\t\t\t\t\t\tenableReinitialize\r\n\t\t\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\t\t\tinnerRef={formikRef}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{(formik) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t<FormikControl\r\n\t\t\t\t\t\t\t\t\t\tcontrol=\"customRadio\"\r\n\t\t\t\t\t\t\t\t\t\tname={\"option\"}\r\n\t\t\t\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{showSolution && solution && (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className={style.solutionText}>Solution</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={style.solution}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t__html: solution,\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<div className={style.actions}>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.previousButton}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={currentQuestionIndex < 1}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => changeQuestion(-1)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<FaAngleLeft />\r\n\t\t\t\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.nextButton}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => changeQuestion(1)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{currentQuestionIndex + 1 === testData.length ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"Submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FaAngleRight />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SingleTest;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\ProgressBar\\ProgressBar.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\FormikControl.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\Input.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\Select.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\CheckboxGroup.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\Textarea.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\CustomCheckBoxGroup.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\RadioButtons.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\FilePicker.js",["262","263","264"],"import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst FilePicker = (props) => {\r\n\tconst { label, name, setFieldValue, ...rest } = props;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label htmlFor={name}>{label}</label>\r\n\t\t\t<div className=\"custom-file\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"custom-file-input\"\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tsetFieldValue(name, event.currentTarget.files[0]);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<label className=\"custom-file-label\">{label}</label>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FilePicker;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\TextError.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\reducers\\1RootReducer.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Login\\Login.js",["265","266"],"import FormikControl from \"components/Formik/FormikControl\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signIn } from \"store/actions/authActions\";\r\nimport style from \"./login.module.css\";\r\nimport RsIcon from \"../../assets/RsIcon.svg\";\r\nimport axios from \"axios\";\r\nconst Login = (props) => {\r\n\tconst firebase = useFirebase();\r\n\tconst history = useHistory();\r\n\tconst [showOtpScreen, setShowOtpScreen] = useState(false);\r\n\tconst [mobileNumber, setMobileNumber] = useState(\"\");\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst authFireBase = useSelector((state) => state.firebase.auth);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (authFireBase.uid) {\r\n\t\t\thistory.push(\r\n\t\t\t\t// props.location.state\r\n\t\t\t\t// \t? props.location.state.from.pathname\r\n\t\t\t\t// :\r\n\t\t\t\t\"/admin\"\r\n\t\t\t);\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [authFireBase]);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n\t\t\t\"sign-in-button\",\r\n\t\t\t{\r\n\t\t\t\tsize: \"invisible\",\r\n\t\t\t\tcallback: (response) => {\r\n\t\t\t\t\t// reCAPTCHA solved, allow signInWithPhoneNumber.\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\t// console.log(\"hello\");\r\n\t\t\t\t\t// onSignInSubmit();\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t});\r\n\r\n\tconst signIn = (phoneNumber, submitProps) => {\r\n\t\tconst appVerifier = window.recaptchaVerifier;\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signInWithPhoneNumber(phoneNumber, appVerifier)\r\n\t\t\t.then((confirmationResult) => {\r\n\t\t\t\tsetShowOtpScreen(true);\r\n\t\t\t\tsetMobileNumber(phoneNumber);\r\n\t\t\t\tsubmitProps.setSubmitting(false);\r\n\t\t\t\treturn (window.confirmationResult = confirmationResult);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetError(err.message);\r\n\t\t\t\tsubmitProps.setSubmitting(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst initialValues = {\r\n\t\tphoneNumber: \"\",\r\n\t\tcode: \"\",\r\n\t};\r\n\r\n\tconst checkIfUserExists = async (token) => {\r\n\t\tconst res = await axios.get(\"/users/check_if_user_exists\", {\r\n\t\t\theaders: { Authorization: `Bearer ${token}` },\r\n\t\t});\r\n\t\tif (res.data.status) {\r\n\t\t\thistory.push(\"/admin\");\r\n\t\t} else history.push(\"/auth/setProfile\");\r\n\t};\r\n\tconst onSubmit = (values, submitProps) => {\r\n\t\tsubmitProps.setSubmitting(true);\r\n\t\tif (showOtpScreen) {\r\n\t\t\treturn window.confirmationResult\r\n\t\t\t\t.confirm(values.code)\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tcheckIfUserExists(result.user.ya);\r\n\t\t\t\t\tsubmitProps.setSubmitting(false);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tsetError(error.message);\r\n\t\t\t\t\tsubmitProps.setSubmitting(false);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tsignIn(`+91${values.phoneNumber}`, submitProps);\r\n\t};\r\n\tconst [disable, setDisable] = useState(true);\r\n\tconst validatePhoneNumber = (value) => {\r\n\t\tsetError(\"\");\r\n\t\tif (!/^\\d+$/.test(value)) {\r\n\t\t\tsetError(\"Type only numbers\");\r\n\r\n\t\t\tsetDisable(true);\r\n\t\t} else if (value.length < 10) {\r\n\t\t\tsetDisable(true);\r\n\t\t} else setDisable(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t<div className={style.box2}></div>\r\n\t\t\t<div className={style.box1}>\r\n\t\t\t\t<h2 className=\"primary\">\r\n\t\t\t\t\t{showOtpScreen\r\n\t\t\t\t\t\t? `Enter the OTP sent to ${mobileNumber} `\r\n\t\t\t\t\t\t: \"Login with your phone number\"}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<p className=\"text-align-center\" style={{ color: \"red\" }}>\r\n\t\t\t\t\t{error}\r\n\t\t\t\t</p>\r\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n\t\t\t\t\t{(formik) => (\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<FormikControl\r\n\t\t\t\t\t\t\t\tcontrol={\"input\"}\r\n\t\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\t\tname={showOtpScreen ? \"code\" : \"phoneNumber\"}\r\n\t\t\t\t\t\t\t\t// maxlength=\"10\"\r\n\t\t\t\t\t\t\t\tpattern=\"\\d*\"\r\n\t\t\t\t\t\t\t\tmaxlength=\"10\"\r\n\t\t\t\t\t\t\t\tplaceholder={showOtpScreen ? null : \"Enter 10-digit number\"}\r\n\t\t\t\t\t\t\t\tvalidate={!showOtpScreen && validatePhoneNumber}\r\n\t\t\t\t\t\t\t\t// label=\"Phone Number\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div id=\"sign-in-button\"></div>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn-primary sign-in-button\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={!formik.dirty || formik.isSubmitting || disable}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{showOtpScreen ? \"Submit\" : \"Get OTP\"}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{showOtpScreen && (\r\n\t\t\t\t\t\t\t\t<p onClick={() => setShowOtpScreen(false)}>\r\n\t\t\t\t\t\t\t\t\tGo back to the login screen ?\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t\t<img className={style.logo} src={RsIcon} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Layout\\DashBoardLayout.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\actions\\authActions.js",["267"],"import history from \"../../history\";\r\nimport { USER_LOGIN_REQUEST } from \"store/constants/authConstants\";\r\nimport { USER_LOGOUT } from \"store/constants/authConstants\";\r\nimport { USER_LOGIN_FAIL } from \"store/constants/authConstants\";\r\nimport { USER_LOGIN_SUCCESS } from \"store/constants/authConstants\";\r\n\r\nexport const signIn = (phoneNumber) => {\r\n\tconst appVerifier = window.recaptchaVerifier;\r\n\treturn (dispatch, getState, getFirebase) => {\r\n\t\tconst firebase = getFirebase();\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_REQUEST,\r\n\t\t});\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signInWithPhoneNumber(phoneNumber, appVerifier)\r\n\t\t\t.then((confirmationResult) => {\r\n\t\t\t\t// dispatch({\r\n\t\t\t\t// \ttype: USER_LOGIN_SUCCESS,\r\n\t\t\t\t// });\r\n\t\t\t\treturn (window.confirmationResult = confirmationResult);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.message);\r\n\t\t\t\tdispatch({ type: USER_LOGIN_FAIL, payload: err.message });\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const signOut = () => {\r\n\treturn (dispatch, getState, getFirebase) => {\r\n\t\tconst firebase = getFirebase();\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signOut()\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: USER_LOGOUT });\r\n\t\t\t\thistory.push(\"/auth/login\");\r\n\t\t\t});\r\n\t};\r\n};\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\constants\\authConstants.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\history.js",["268"],"import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\nexport default createBrowserHistory();\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Collapse.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Login\\SetProfile.js",["269"],"import axios from \"axios\";\r\nimport FormikControl from \"components/Formik/FormikControl\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport style from \"./login.module.css\";\r\nconst SetProfile = () => {\r\n\tconst firebase = useFirebase();\r\n\tconst history = useHistory();\r\n\r\n\tconst authFireBase = useSelector((state) => state.firebase.auth);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (authFireBase.uid) {\r\n\t\t\thistory.push(\r\n\t\t\t\t// props.location.state\r\n\t\t\t\t// \t? props.location.state.from.pathname\r\n\t\t\t\t// :\r\n\t\t\t\t\"/admin\"\r\n\t\t\t);\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [authFireBase]);\r\n\r\n\tconst saveDataInDatabase = async (values) => {\r\n\t\tlet phone = authFireBase.phoneNumber.replace(\"+91\", \"\");\r\n\t\tvar data = {\r\n\t\t\t...values,\r\n\t\t\tphone_number: phone,\r\n\t\t\tusername: phone,\r\n\t\t\temail: phone + \"\" + \"@gmail.com \",\r\n\t\t\tstandard: 14,\r\n\t\t};\r\n\t\tawait axios.post(\"/users/updateprofile\", data);\r\n\t\thistory.push(\"/admin\");\r\n\t};\r\n\r\n\tconst onSubmit = async (values) => {\r\n\t\tconst user = firebase.auth().currentUser;\r\n\t\tuser\r\n\t\t\t.updateProfile({\r\n\t\t\t\tdisplayName: values.firstname + \" \" + values.lastname,\r\n\t\t\t\tgender: values.gender,\r\n\t\t\t})\r\n\t\t\t.then(function () {\r\n\t\t\t\tsaveDataInDatabase(values);\r\n\t\t\t\t// return history.push(\"/admin/test\");\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ firstname: \"\", lastname: \"\" }}\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<FormikControl\r\n\t\t\t\t\t\tcontrol=\"input\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"firstname\"\r\n\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormikControl\r\n\t\t\t\t\t\tcontrol=\"input\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"lastname\"\r\n\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormikControl\r\n\t\t\t\t\t\tcontrol=\"radio\"\r\n\t\t\t\t\t\tname=\"gender\"\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t{ id: \"Male\", name: \"Male\" },\r\n\t\t\t\t\t\t\t{ id: \"Female\", name: \"Female\" },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"btn-primary\" type=\"submit\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SetProfile;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\Formik\\CustomRadioGroup.js",["270","271","272","273","274"],"import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nimport style from \"./customRadio.module.css\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\n\r\nconst RenderHTML = (props) => (\r\n\t<span dangerouslySetInnerHTML={{ __html: props.HTML }}></span>\r\n);\r\nfunction RadioButtons(props) {\r\n\tconst { label, name, options, showCorrectAnswer, correctAnswer } = props;\r\n\r\n\tconst string = \"AABCD\";\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label className={`d-block`}>{label}</label>\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<Field name={name}>\r\n\t\t\t\t\t{({ field, ...rest }) => {\r\n\t\t\t\t\t\treturn options.map((option, index) => {\r\n\t\t\t\t\t\t\tindex = Number(index) + 1;\r\n\t\t\t\t\t\t\tconst error = rest.form.errors.option == index;\r\n\r\n\t\t\t\t\t\t\tconst correct = index == correctAnswer && showCorrectAnswer;\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\tid={field.name + index}\r\n\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t{...rest}\r\n\t\t\t\t\t\t\t\t\t\t// onChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t// \tform.setFieldValue(name, parseInt(e.target.value))\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\tdisabled={showCorrectAnswer}\r\n\t\t\t\t\t\t\t\t\t\tclassName={style.radio}\r\n\t\t\t\t\t\t\t\t\t\tvalue={index}\r\n\t\t\t\t\t\t\t\t\t\tchecked={field.value == index}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\thtmlFor={field.name + index}\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${style.label}`}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tboxShadow: error\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"0px 0px 0px 2px var(--danger)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: correct && \"0px 0px 0px 2px var(--success)\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: error\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"var(--danger)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: correct && \"var(--success)\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.optionIndex}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: error\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"var(--danger)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: correct && \"var(--success)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tborder: error\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"2px solid var(--danger)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: correct && \"2px solid var(--success)\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{string[index]}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t<RenderHTML HTML={option} />\r\n\t\t\t\t\t\t\t\t\t\t{error ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<FaTimes style={{ marginLeft: \"auto\" }} />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\tcorrect && <FaCheck style={{ marginLeft: \"auto\" }} />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t{/* {option.display_name || option.name} */}\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t</Field>\r\n\t\t\t</div>\r\n\t\t\t{/* <ErrorMessage component={TextError} name={name} /> */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RadioButtons;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Practice\\PracticeBySubject\\PracticeBySubject.js",["275","276","277","278"],"//subjects\r\nimport { ReactComponent as EnglishIcon } from \"../../../assets/subjects/EnglishIcon.svg\";\r\nimport { ReactComponent as HindiIcon } from \"../../../assets/subjects/Hindi.svg\";\r\nimport { ReactComponent as KannadaIcon } from \"../../../assets/subjects/Kannada.svg\";\r\nimport { ReactComponent as MathIcon } from \"../../../assets/subjects/MathIcon.svg\";\r\nimport { ReactComponent as ScienceIcon } from \"../../../assets/subjects/ScienceIcon.svg\";\r\nimport { ReactComponent as SocialSciencesIcon } from \"../../../assets/subjects/SocialSciences.svg\";\r\n\r\nimport { ReactComponent as ArrowRightCircleIcon } from \"../../../assets/subjects/ArrowRightCircle.svg\";\r\nimport style from \"./practiceBySubject.module.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { fetchSubjects } from \"store/actions/practiceBySubjectActions\";\r\nimport CustomSpinner from \"components/CustomSpinner\";\r\nimport getColorById from \"components/helpers/getColorById\";\r\nconst PracticeBySubject = (props) => {\r\n\tconst subjects = useSelector((state) => Object.values(state.subjects));\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchSubjects());\r\n\t}, []);\r\n\r\n\tconst getIconById = (id) => {\r\n\t\tswitch (id) {\r\n\t\t\tcase 22:\r\n\t\t\t\treturn <MathIcon />;\r\n\t\t\tcase 25:\r\n\t\t\t\treturn <ScienceIcon />;\r\n\t\t\tcase 33:\r\n\t\t\t\treturn <HindiIcon />;\r\n\t\t\tcase 35:\r\n\t\t\t\treturn <SocialSciencesIcon />;\r\n\t\t\tcase 36:\r\n\t\t\tcase 37:\r\n\t\t\tcase 38:\r\n\t\t\t\treturn <EnglishIcon />;\r\n\t\t\tdefault:\r\n\t\t\t\treturn <KannadaIcon />;\r\n\t\t}\r\n\t};\r\n\r\n\tconst listBlock = () => {\r\n\t\treturn (\r\n\t\t\tsubjects &&\r\n\t\t\tsubjects.map((subject) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className={style.subjectsBlock} key={subject.id}>\r\n\t\t\t\t\t\t{getIconById(subject.id)}\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={style.subjectArrow}\r\n\t\t\t\t\t\t\tonClick={() => history.push(`${location.pathname}/${subject.id}`)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ArrowRightCircleIcon\r\n\t\t\t\t\t\t\t\tstyle={{ height: \"4.5rem\", width: \"4.5rem\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"w-100\">\r\n\t\t\t<h2 className={`${style.h2} primary`}>Practice by Subject</h2>\r\n\t\t\t{subjects.length > 0 ? (\r\n\t\t\t\t<div className={style.subjects}> {listBlock()}</div>\r\n\t\t\t) : (\r\n\t\t\t\t<CustomSpinner height=\"100%\" />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PracticeBySubject;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\actions\\practiceBySubjectActions.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\constants\\practiceConstants.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\reducers\\praticeBySubjectReducer.js",["279"],"import { FETCH_SUBJECTS_SUCCESS } from \"store/constants/practiceConstants\";\r\nimport _ from \"lodash\";\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase FETCH_SUBJECTS_SUCCESS:\r\n\t\t\treturn _.keyBy(payload, \"id\");\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\CustomSpinner.js",["280","281"],"import React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport SquareLoader from \"react-spinners/GridLoader\";\r\nimport Lottie from \"react-lottie\";\r\nimport * as animationData from \"assets/lottie/spinner2.json\";\r\n\r\nconst CustomSpinner = ({\r\n\tsize,\r\n\tmargin,\r\n\tcolor,\r\n\tclassName,\r\n\theight = \"80vh\",\r\n\tmarginTop,\r\n}) => {\r\n\t// const override = css`\r\n\t// \tdisplay: block;\r\n\t// \tmargin: 10px;\r\n\t// \tborder-color: red;\r\n\t// `;\r\n\r\n\tconst defaultOptions = {\r\n\t\tloop: true,\r\n\t\tautoPlay: true,\r\n\t\tanimationData: animationData.default,\r\n\t\trendererSettings: {\r\n\t\t\tpreserveAspectRatio: \"xMidYMid slice\",\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={className}\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\talignItems: \"center\",\r\n\t\t\t\theight,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Lottie options={defaultOptions} height={\"200\"} width={\"200\"} />\r\n\t\t\t{/* <SquareLoader\r\n\t\t\t\t// \t\t// css={override}\r\n\t\t\t\tsize={size || 50}\r\n\t\t\t\tmargin={margin || 10}\r\n\t\t\t\tcolor={color || \"var(--secondary)\"}\r\n\t\t\t\tloading={true}\r\n\t\t\t/> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CustomSpinner;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\reducers\\readReducer.js",["282","283","284"],"import { FETCH_READ_SUCCESS } from \"store/constants/readConstants\";\r\nimport { FETCH_READ_FAIL } from \"store/constants/readConstants\";\r\nimport { FETCH_READ_REQUEST } from \"store/constants/readConstants\";\r\nimport _ from \"lodash\";\r\nconst initialState = {\r\n\ttypes: {\r\n\t\t1: {\r\n\t\t\tid: 1,\r\n\t\t\tname: \"Mind Maps\",\r\n\t\t},\r\n\t\t2: {\r\n\t\t\tid: 2,\r\n\t\t\tname: \"Past Year\",\r\n\t\t},\r\n\t\t3: {\r\n\t\t\tid: 3,\r\n\t\t\tname: \"Revision Notes\",\r\n\t\t},\r\n\t\t4: {\r\n\t\t\tid: 4,\r\n\t\t\tname: \"Textbooks\",\r\n\t\t},\r\n\t\t5: {\r\n\t\t\tid: 5,\r\n\t\t\tname: \"Formulas\",\r\n\t\t},\r\n\t},\r\n\tloading: false,\r\n\tdata: JSON.parse(window.localStorage.getItem(\"readables\")) || {},\r\n\terror: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase FETCH_READ_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase FETCH_READ_SUCCESS:\r\n\t\t\treturn { ...state, loading: false, data: _.keyBy(payload, \"id\") };\r\n\t\tcase FETCH_READ_REQUEST:\r\n\t\t\treturn { ...state, loading: false, error: payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\constants\\readConstants.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\hooks\\useIsMount.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\store\\actions\\readActions.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Read\\FilteredRead.js",["285","286","287","288"],"import { useIsMount } from \"components/hooks/useIsMount\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { fetchSubjects } from \"store/actions/practiceBySubjectActions\";\r\nimport { fetchReadables } from \"store/actions/readActions\";\r\n// import colors from \"nice-color-palettes/200\";\r\nimport styles from \"./read.module.css\";\r\nimport { ReactComponent as ArrowRightCircleIcon } from \"../../assets/subjects/ArrowRightCircle.svg\";\r\nimport CustomSpinner from \"components/CustomSpinner\";\r\n\r\nconst FilteredRead = () => {\r\n\tconst { id } = useParams();\r\n\r\n\tconst isMount = useIsMount();\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst [search, setSearch] = useState(\"\");\r\n\tuseEffect(() => {\r\n\t\tresetReadables();\r\n\t\tdispatch(fetchSubjects());\r\n\t\tdispatch(fetchReadables());\r\n\t}, []);\r\n\tconst subjects = useSelector((state) => Object.values(state.subjects));\r\n\r\n\tconst { loading, error, types, data } = useSelector(\r\n\t\t(state) => state.readables\r\n\t);\r\n\tconst books = Object.values(data);\r\n\r\n\tconst [readablesList, setReadablesList] = useState([]);\r\n\r\n\tconst colors = [\r\n\t\t\"#FF6633\",\r\n\t\t\"#FFB399\",\r\n\t\t\"#FF33FF\",\r\n\t\t\"#00B3E6\",\r\n\t\t\"#E6B333\",\r\n\t\t\"#3366E6\",\r\n\t\t\"#999966\",\r\n\r\n\t\t\"#B34D4D\",\r\n\t\t\"#80B300\",\r\n\t\t\"#809900\",\r\n\t\t\"#E6B3B3\",\r\n\t\t\"#6680B3\",\r\n\t\t\"#66991A\",\r\n\t\t\"#FF99E6\",\r\n\r\n\t\t\"#FF1A66\",\r\n\t\t\"#E6331A\",\r\n\r\n\t\t\"#66994D\",\r\n\t\t\"#B366CC\",\r\n\t\t\"#4D8000\",\r\n\t\t\"#B33300\",\r\n\t\t\"#CC80CC\",\r\n\t\t\"#66664D\",\r\n\t\t\"#991AFF\",\r\n\t\t\"#E666FF\",\r\n\t\t\"#4DB3FF\",\r\n\t\t\"#1AB399\",\r\n\t\t\"#E666B3\",\r\n\t\t\"#33991A\",\r\n\t\t\"#CC9999\",\r\n\t\t\"#B3B31A\",\r\n\r\n\t\t\"#4D8066\",\r\n\t\t\"#809980\",\r\n\r\n\t\t\"#999933\",\r\n\t\t\"#FF3380\",\r\n\t\t\"#CCCC00\",\r\n\r\n\t\t\"#4D80CC\",\r\n\t\t\"#9900B3\",\r\n\t\t\"#E64D66\",\r\n\t\t\"#4DB380\",\r\n\t\t\"#FF4D4D\",\r\n\r\n\t\t\"#6666FF\",\r\n\t];\r\n\r\n\tconst listReadables = () => {\r\n\t\treturn readablesList.map((readable) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tkey={readable.id}\r\n\t\t\t\t\tclassName={styles.filteredReadable}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: colors[Math.floor(Math.random() * colors.length)],\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => history.push(`/admin/read/${id}/${readable.id}`)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{readable.display_name}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\tconst resetReadables = () => {\r\n\t\t// console.log(books);\r\n\t\tsetReadablesList(books.filter((item) => item.parent.includes(id)));\r\n\t};\r\n\tconst filterReadables = (key, parameter) => {\r\n\t\tif (key === \"display_name\") {\r\n\t\t\treturn setReadablesList(\r\n\t\t\t\tbooks\r\n\t\t\t\t\t.filter((item) => item.parent.includes(id))\r\n\t\t\t\t\t.filter((item) =>\r\n\t\t\t\t\t\titem.display_name.toLowerCase().includes(parameter.toLowerCase())\r\n\t\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\tsetReadablesList(\r\n\t\t\tbooks\r\n\t\t\t\t.filter((item) => item.parent.includes(id))\r\n\t\t\t\t.filter((item) => item[key].includes(parameter))\r\n\t\t);\r\n\t\tsetSearch(\"\");\r\n\t};\r\n\tconst renderSubjects = () => {\r\n\t\tconst colors = [\r\n\t\t\t\"#ff8058\",\r\n\t\t\t\"#ffb038\",\r\n\t\t\t\"#49c0c1\",\r\n\t\t\t\"#ff78a3\",\r\n\t\t\t// \"#57628e\",\r\n\t\t\t\"#f36450\",\r\n\t\t\t\"#809900\",\r\n\t\t\t\"#E6B3B3\",\r\n\t\t\t\"#6680B3\",\r\n\t\t\t\"#66991A\",\r\n\t\t\t\"#FF99E6\",\r\n\t\t];\r\n\t\treturn subjects.map(({ name, id, bgcolor }, index) => (\r\n\t\t\t<button\r\n\t\t\t\tstyle={{ backgroundColor: colors[index] }}\r\n\t\t\t\tkey={id}\r\n\t\t\t\tclassName={styles.filterBySubjectButton}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tfilterReadables(\"subjects\", id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{name}\r\n\t\t\t</button>\r\n\t\t));\r\n\t};\r\n\r\n\tconst searchBox = () => {\r\n\t\treturn (\r\n\t\t\t<input\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tclassName={styles.searchBox}\r\n\t\t\t\tplaceholder=\"Search by readable name\"\r\n\t\t\t\tvalue={search}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tsetSearch(e.target.value);\r\n\t\t\t\t\tfilterReadables(\"display_name\", e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\treturn loading ? (\r\n\t\t<CustomSpinner />\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: \"rotate(180deg)\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tmarginTop: \"-2.2rem\",\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={() => history.push(`/admin/read`)}\r\n\t\t\t>\r\n\t\t\t\t<ArrowRightCircleIcon />\r\n\t\t\t</button>\r\n\t\t\t<h1 className=\"secondary text-align-center\">{id}</h1>\r\n\t\t\t<div className={styles.filterBySubjectContainer}>\r\n\t\t\t\t<h2 className=\"text-align-center primary\">Filter by Subject</h2>\r\n\t\t\t\t{searchBox()}\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{ backgroundColor: colors[1] }}\r\n\t\t\t\t\tclassName={styles.filterBySubjectButton}\r\n\t\t\t\t\tonClick={resetReadables}\r\n\t\t\t\t>\r\n\t\t\t\t\tAll subjects\r\n\t\t\t\t</button>\r\n\t\t\t\t{renderSubjects()}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={styles.filteredReadablesContainer}>{listReadables()}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FilteredRead;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Read\\ReadBook.js",["289","290","291","292","293","294","295","296"],"import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport \"./readBook.css\";\r\nimport { fetchSubjects } from \"store/actions/practiceBySubjectActions\";\r\nimport { fetchReadables } from \"store/actions/readActions\";\r\nimport CustomSpinner from \"components/CustomSpinner\";\r\nimport { ReactComponent as ArrowRightCircleIcon } from \"../../assets/subjects/ArrowRightCircle.svg\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\nconst ReadBook = () => {\r\n\tconst { id, bookId } = useParams();\r\n\tconst [numPages, setNumPages] = useState(null);\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst { loading, error, types, data } = useSelector(\r\n\t\t(state) => state.readables\r\n\t);\r\n\tconst [url, setUrl] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchReadables());\r\n\t}, []);\r\n\r\n\tconst fetchBook = async () => {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`https://classcast-198812.appspot.com/content/generateSignedUrl/`,\r\n\t\t\t{\r\n\t\t\t\tpath: data[bookId].path,\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tsetUrl(`https://cors-anywhere.herokuapp.com/${res.data}`);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchBook();\r\n\t}, []);\r\n\tfunction onDocumentLoadSuccess({ numPages, ...rest }) {\r\n\t\tsetNumPages(numPages);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: \"rotate(180deg)\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tzIndex: 1000,\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={() => history.push(`/admin/read/${id}`)}\r\n\t\t\t>\r\n\t\t\t\t<ArrowRightCircleIcon />\r\n\t\t\t</button>\r\n\t\t\t{url || loading ? (\r\n\t\t\t\t<Document\r\n\t\t\t\t\tfile={url}\r\n\t\t\t\t\tonLoadSuccess={onDocumentLoadSuccess}\r\n\t\t\t\t\tnoData={\r\n\t\t\t\t\t\t<h1 className=\"reactPdf_error text-align-center primary\">\r\n\t\t\t\t\t\t\t{/* PDF could not be loaded try reloading the page */}\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t}\r\n\t\t\t\t\terror={\r\n\t\t\t\t\t\t<h1 className=\"reactPdf_error text-align-center primary\">\r\n\t\t\t\t\t\t\tPDF could not be loaded try reloading the page\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tloading={<CustomSpinner />}\r\n\t\t\t\t>\r\n\t\t\t\t\t{Array.from(Array(numPages).keys()).map((item) => (\r\n\t\t\t\t\t\t<Page pageNumber={item + 1} key={item + 1} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Document>\r\n\t\t\t) : (\r\n\t\t\t\t<CustomSpinner />\r\n\t\t\t)}\r\n\r\n\t\t\t{/* <p>\r\n\t\t\t\tPage {pageNumber} of {numPages}\r\n\t\t\t</p> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ReadBook;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\ScrollMenu.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\TimerClock.jsx",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\QuestionsScroll.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\CustomModal.js",["297"],"import React, { useState } from \"react\";\r\n\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"./customModal.css\";\r\nconst CustomModal = ({ children, open, onCloseModal, onOpenModal }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={onCloseModal}\r\n\t\t\t\tcenter\r\n\t\t\t\tclassNames={{\r\n\t\t\t\t\t// overlay: \"customOverlay\",\r\n\t\t\t\t\tmodal: \"customModal\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CustomModal;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\TestResults.jsx",["298"],"import React, { useState } from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport * as animationData from \"assets/lottie/correct1.json\";\r\nimport style from \"./testResults.module.css\";\r\nimport {\r\n\tRiCheckboxCircleLine,\r\n\tRiCheckboxMultipleLine,\r\n\tRiTimerLine,\r\n} from \"react-icons/ri\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\nimport { GiArrowScope } from \"react-icons/gi\";\r\nimport { GrScorecard } from \"react-icons/gr\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst DisplayDataBlock = ({ icon, heading, score }) => (\r\n\t<div className={style.data}>\r\n\t\t{icon}\r\n\t\t<div className={style.text}>\r\n\t\t\t<div className={style.textHeading}>{heading}</div>\r\n\t\t\t<div>{score}</div>\r\n\t\t</div>\r\n\t</div>\r\n);\r\nconst TestResults = ({\r\n\tonClick,\r\n\tstats: { correct, attempt, score, totalQuestions, timeTaken, totalMarks },\r\n}) => {\r\n\tconst defaultOptions = {\r\n\t\tloop: false,\r\n\t\tautoPlay: true,\r\n\t\tanimationData: animationData.default,\r\n\t\trendererSettings: {\r\n\t\t\tpreserveAspectRatio: \"xMidYMid slice\",\r\n\t\t},\r\n\t};\r\n\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t<Lottie options={defaultOptions} height={200} width={200} />\r\n\t\t\t<div className={style.scoreCard}>\r\n\t\t\t\t<DisplayDataBlock\r\n\t\t\t\t\ticon={<RiTimerLine size={\"4rem\"} />}\r\n\t\t\t\t\theading={\"Time Taken\"}\r\n\t\t\t\t\tscore={timeTaken}\r\n\t\t\t\t/>\r\n\t\t\t\t<DisplayDataBlock\r\n\t\t\t\t\ticon={<RiCheckboxCircleLine size={\"4rem\"} />}\r\n\t\t\t\t\theading={\"Correct\"}\r\n\t\t\t\t\tscore={`${correct} / ${attempt}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<DisplayDataBlock\r\n\t\t\t\t\ticon={<FaTimesCircle size={\"4rem\"} />}\r\n\t\t\t\t\theading={\"Wrong\"}\r\n\t\t\t\t\tscore={`${attempt - correct} / ${attempt}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<DisplayDataBlock\r\n\t\t\t\t\ticon={<GiArrowScope size={\"4rem\"} />}\r\n\t\t\t\t\theading={\"Accuracy\"}\r\n\t\t\t\t\tscore={`${correct ? ((correct / attempt) * 100).toFixed(2) : 0}%`}\r\n\t\t\t\t/>\r\n\t\t\t\t<DisplayDataBlock\r\n\t\t\t\t\ticon={<GrScorecard size={\"4rem\"} />}\r\n\t\t\t\t\theading={\"Score\"}\r\n\t\t\t\t\tscore={`${score} / ${totalMarks}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<DisplayDataBlock\r\n\t\t\t\t\ticon={<RiCheckboxMultipleLine size={\"4rem\"} />}\r\n\t\t\t\t\theading={\"Attempted\"}\r\n\t\t\t\t\tscore={`${attempt} / ${totalQuestions}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"btn-primary\" onClick={onClick}>\r\n\t\t\t\t\tSee all solutions\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn-primary\" onClick={() => history.goBack(-1)}>\r\n\t\t\t\t\tTake another test\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TestResults;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\SinglePractice.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"import FormikControl from \"components/Formik/FormikControl\";\r\nimport ProgressBar from \"components/ProgressBar/ProgressBar\";\r\nimport { Form, Formik, useFormik, useFormikContext } from \"formik\";\r\n\r\nimport style from \"./singleTest.module.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport TimerClock from \"./TimerClock\";\r\nimport QuestionsScroll from \"./QuestionsScroll\";\r\nimport CustomModal from \"components/CustomModal\";\r\nimport PracticeResults from \"./PracticeResults\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport CustomSpinner from \"components/CustomSpinner\";\r\nconst SingleTest = () => {\r\n\tconst [options, setOptions] = useState([]);\r\n\tconst timerClockRef = useRef(null);\r\n\tconst { id, courseId, testId } = useParams();\r\n\tconst formikRef = useRef();\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [studentAnswers, setStudentAnswers] = useState({});\r\n\tconst [question, setQuestion] = useState(<p></p>);\r\n\tconst [solution, setSolution] = useState(\"\");\r\n\tconst [showSolution, setShowSolution] = useState(false);\r\n\r\n\tconst [testData, setTestData] = useState([]);\r\n\tconst [testMeta, setTestMeta] = useState({});\r\n\tconst [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\tconst [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\r\n\tconst [disableSolutionButton, setDisableSolutionButton] = useState(true);\r\n\tconst [correctAnswer, setCorrectAnswer] = useState(null);\r\n\tconst [initialValues, setInitialValues] = useState({\r\n\t\toption: Number(studentAnswers[Number(currentQuestionIndex)]),\r\n\t});\r\n\tconst instituteId = useSelector((state) => state.instituteId);\r\n\r\n\tconst fetchTestMeta = async () => {\r\n\t\tconst response = await axios.get(`/content/test_meta/${testId}/`);\r\n\t\tsetTestMeta(response.data.data);\r\n\t};\r\n\tconst fetchData = async () => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await axios.get(\r\n\t\t\t\t`/content/test_data_v2/${instituteId}/${testId}`\r\n\t\t\t);\r\n\t\t\tsetTestData(response.data.data);\r\n\t\t\tsetLoading(false);\r\n\t\t\t// console.log(response.data.data);\r\n\t\t} catch (error) {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchTestMeta();\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t//setting first question\r\n\t\tif (testData.length > 0) {\r\n\t\t\tchangeQuestion(0);\r\n\t\t}\r\n\t}, [testData]);\r\n\r\n\tuseEffect(() => {\r\n\t\t//if user has answered a question it iw stored in an object\r\n\t\t//which is accessed whenever that question is again viewed\r\n\t\tsetInitialValues({\r\n\t\t\toption: Number(studentAnswers[Number(currentQuestionIndex)]),\r\n\t\t});\r\n\t\tsetCorrectAnswer(null);\r\n\t\tsetShowCorrectAnswer(false);\r\n\t\tsetDisableSolutionButton(true);\r\n\t\tsetShowSolution(false);\r\n\t}, [currentQuestionIndex]);\r\n\r\n\tconst [studentTestData, setStudentTestData] = useState({});\r\n\tconst handleStudentTestData = () => {\r\n\t\tconst {\r\n\t\t\tis_option_1_correct,\r\n\t\t\tis_option_2_correct,\r\n\t\t\tis_option_3_correct,\r\n\t\t\tis_option_4_correct,\r\n\t\t\tmax_marks,\r\n\t\t\tnegative_marks,\r\n\t\t} = testData[currentQuestionIndex];\r\n\t\tconst options = [\r\n\t\t\tis_option_1_correct,\r\n\t\t\tis_option_2_correct,\r\n\t\t\tis_option_3_correct,\r\n\t\t\tis_option_4_correct,\r\n\t\t];\r\n\r\n\t\tconst answer = formikRef.current && formikRef.current.values.option;\r\n\t\tif (!answer) return null;\r\n\t\telse if (options[Number(answer) - 1]) {\r\n\t\t\tsetStudentTestData((ans) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...ans,\r\n\t\t\t\t\t[Number(currentQuestionIndex)]: {\r\n\t\t\t\t\t\tcorrect: true,\r\n\t\t\t\t\t\tattempt: true,\r\n\t\t\t\t\t\tmax_marks,\r\n\t\t\t\t\t\tnegative_marks,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetStudentTestData((ans) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...ans,\r\n\t\t\t\t\t[Number(currentQuestionIndex)]: {\r\n\t\t\t\t\t\tcorrect: false,\r\n\t\t\t\t\t\tattempt: true,\r\n\t\t\t\t\t\tmax_marks,\r\n\t\t\t\t\t\tnegative_marks,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst [stats, setStats] = useState({\r\n\t\tcorrect: 0,\r\n\t\tattempt: 0,\r\n\t\tscore: 0,\r\n\t\ttotalQuestions: 0,\r\n\t});\r\n\tconst calculateStats = () => {\r\n\t\tconst { h, m, s } = timerClockRef.current.state;\r\n\t\tsetStats(() => {\r\n\t\t\treturn {\r\n\t\t\t\tcorrect: 0,\r\n\t\t\t\tattempt: 0,\r\n\t\t\t\tscore: 0,\r\n\t\t\t\ttotalQuestions: testData.length,\r\n\t\t\t\ttimeTaken: `${testMeta.duration_minutes - m - 1} mins ${60 - s}  sec`,\r\n\t\t\t\ttotalMarks: testData.reduce((acc, obj) => acc + obj.max_marks, 0),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn Object.values(studentTestData).map((question) => {\r\n\t\t\tif (question.attempt) {\r\n\t\t\t\tsetStats((prevState) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tattempt: prevState.attempt + 1,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tif (question.correct) {\r\n\t\t\t\t\treturn setStats((prevState) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tcorrect: prevState.correct + 1,\r\n\t\t\t\t\t\t\tscore: prevState.score + question.max_marks,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn setStats((prevState) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tscore: prevState.score - question.negative_marks,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst changeQuestion = (value, answer, shouldNotScroll) => {\r\n\t\tif (currentQuestionIndex + value === testData.length) {\r\n\t\t\treturn endTestHandler();\r\n\t\t}\r\n\t\tif (formikRef.current && formikRef.current.values.option) {\r\n\t\t\tsetStudentAnswers((ans) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...ans,\r\n\t\t\t\t\t[currentQuestionIndex]: Number(formikRef.current.values.option),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (testData[currentQuestionIndex + value].question_type != 6) {\r\n\t\t\thandleStudentTestData();\r\n\t\t}\r\n\t\tsetCurrentQuestionIndex(currentQuestionIndex + value);\r\n\t\tconst {\r\n\t\t\toption_1,\r\n\t\t\toption_2,\r\n\t\t\toption_3,\r\n\t\t\toption_4,\r\n\t\t\tquestion,\r\n\t\t\tsolution,\r\n\t\t} = testData[currentQuestionIndex + value];\r\n\t\t//putting 4 options in an array and setting it whenever question changes\r\n\t\tsetQuestion(question);\r\n\t\tsetSolution(solution);\r\n\t\tif (testData[currentQuestionIndex + value].question_type != 6) {\r\n\t\t\tsetOptions(\r\n\t\t\t\tObject.values({ option_1, option_2, option_3, option_4 }).filter((x) =>\r\n\t\t\t\t\tBoolean(x)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn formikRef.current && formikRef.current.resetForm();\r\n\r\n\t\t// !shouldNotScroll && executeScroll();\r\n\t};\r\n\r\n\tconst onSubmit = (values, submitProps) => {\r\n\t\t//saving user option\r\n\t\tsetStudentAnswers((ans) => {\r\n\t\t\treturn { ...ans, [currentQuestionIndex]: Number(values.option) };\r\n\t\t});\r\n\t\tconst {\r\n\t\t\tis_option_1_correct,\r\n\t\t\tis_option_2_correct,\r\n\t\t\tis_option_3_correct,\r\n\t\t\tis_option_4_correct,\r\n\t\t} = testData[currentQuestionIndex];\r\n\r\n\t\tconst checkOptions = [\r\n\t\t\tis_option_1_correct,\r\n\t\t\tis_option_2_correct,\r\n\t\t\tis_option_3_correct,\r\n\t\t\tis_option_4_correct,\r\n\t\t];\r\n\r\n\t\t// changeQuestion(1);\r\n\t\t// submitProps.resetForm();\r\n\t\t// if (checkOptions[Number(values.option) - 1]) {\r\n\t\t// \tsetCorrectAnswers((ca) => ca + 1);\r\n\t\t// }\r\n\t\t// submitProps.resetForm();\r\n\t\t// changeQuestion(1);\r\n\t\t//same concept as pulling options\r\n\t\t//we pull which options are correct arrange them in array\r\n\t\t//then check it it's true since we get the option number from\r\n\t\t//values object which comes from formik valus.option\r\n\t\tsetDisableSolutionButton(false);\r\n\t\tsetCorrectAnswer(\r\n\t\t\t_.findIndex(checkOptions, (option) => option === true) + 1\r\n\t\t);\r\n\t\tif (checkOptions[Number(values.option) - 1]) {\r\n\t\t\tsetCorrectAnswer(\r\n\t\t\t\t_.findIndex(checkOptions, (option) => option === true) + 1\r\n\t\t\t);\r\n\t\t\treturn setShowCorrectAnswer(true);\r\n\r\n\t\t\t// changeQuestion(1);\r\n\t\t\t// submitProps.resetForm();\r\n\t\t} else {\r\n\t\t\tsubmitProps.setErrors({ option: values.option });\r\n\t\t\t// setShowSolution(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tconst onOpenModal = () => setOpen(true);\r\n\tconst onCloseModal = () => setOpen(false);\r\n\tconst [endTest, setEndTest] = useState(false);\r\n\tconst [stopTime, setStopTime] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (endTest) {\r\n\t\t\tsetStopTime(true);\r\n\t\t\tcalculateStats();\r\n\t\t\tonOpenModal();\r\n\t\t\tsetEndTest(false);\r\n\t\t}\r\n\t}, [studentTestData]);\r\n\r\n\tconst endTestHandler = () => {\r\n\t\taxios.post(\"/content/update_progress/\", {\r\n\t\t\tcourseid: courseId,\r\n\t\t\tsubject: id,\r\n\t\t\tblock_id: testId,\r\n\t\t\tinsti: instituteId,\r\n\t\t\tpercentage: 100,\r\n\t\t});\r\n\t\tsetStopTime(true);\r\n\t\ttimerClockRef.current.stop();\r\n\t\tsetEndTest(() => true);\r\n\t\t// if user is on a question and clicks on end test then\r\n\t\t// we still need to store the answer and calc stats accordingly\r\n\t\tif (formikRef.current.values.option) {\r\n\t\t\tchangeQuestion(0);\r\n\t\t} else {\r\n\t\t\tcalculateStats();\r\n\t\t\tonOpenModal();\r\n\t\t\tsetEndTest(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn loading ? (\r\n\t\t<CustomSpinner />\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={onCloseModal}\r\n\t\t\t\tcenter\r\n\t\t\t\tclassNames={{\r\n\t\t\t\t\t// overlay: \"customOverlay\",\r\n\t\t\t\t\tmodal: \"customModalPractice\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<PracticeResults\r\n\t\t\t\t\t\tchangeQuestion={changeQuestion}\r\n\t\t\t\t\t\tshowSolution={(value) => setShowSolution(value)}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tonCloseModal();\r\n\t\t\t\t\t\t\tsetShowSolution(true);\r\n\t\t\t\t\t\t\t// changeQuestion(-testData.length + 1);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstats={stats}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<div className={style.qaContainer}>\r\n\t\t\t\t\t<div className={style.timerContainer}>\r\n\t\t\t\t\t\t{testMeta.duration_minutes && (\r\n\t\t\t\t\t\t\t<TimerClock\r\n\t\t\t\t\t\t\t\ttimerClockRef={timerClockRef}\r\n\t\t\t\t\t\t\t\ttime={testMeta.duration_minutes}\r\n\t\t\t\t\t\t\t\tendTestHandler={endTestHandler}\r\n\t\t\t\t\t\t\t\tstopTime={stopTime}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={style.endButton}\r\n\t\t\t\t\t\t\tonClick={stopTime ? onOpenModal : endTestHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{stopTime ? \"View Results\" : \"End\"}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={style.question}>\r\n\t\t\t\t\t\t<span className={style.questionNumber}>\r\n\t\t\t\t\t\t\tQ {currentQuestionIndex + 1}{\" \"}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t__html: question,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tinitialValues={initialValues}\r\n\t\t\t\t\t\tenableReinitialize\r\n\t\t\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\t\t\tinnerRef={formikRef}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{(formik) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t<FormikControl\r\n\t\t\t\t\t\t\t\t\t\tcontrol=\"customRadio\"\r\n\t\t\t\t\t\t\t\t\t\tname={\"option\"}\r\n\t\t\t\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\t\t\t\tshowCorrectAnswer={showCorrectAnswer}\r\n\t\t\t\t\t\t\t\t\t\tcorrectAnswer={correctAnswer}\r\n\t\t\t\t\t\t\t\t\t\t// disabled={showCorrectAnswer}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{showSolution && solution && (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className={style.solutionText}>Solution</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={style.solution}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t__html: solution,\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<div className={style.actions}>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.previousButton}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={disableSolutionButton}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowSolution(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowCorrectAnswer(true);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tView Solution\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t{!showCorrectAnswer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<button className={style.nextButton} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tCheck\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={style.nextButton}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => changeQuestion(1)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{currentQuestionIndex + 1 === testData.length ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FaAngleRight />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SingleTest;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\components\\helpers\\getColorById.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Shared\\PerSubjectPractice.js",["313","314","315"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport style from \"./practiceBySubject.module.css\";\r\nimport { fetchSubjects } from \"store/actions/practiceBySubjectActions\";\r\nimport CustomSpinner from \"components/CustomSpinner\";\r\nimport { ReactComponent as ArrowRightCircleIcon } from \"../../assets/subjects/ArrowRightCircle.svg\";\r\nimport getColorById from \"components/helpers/getColorById\";\r\n\r\nconst PerSubjectPractice = () => {\r\n\tconst { id } = useParams();\r\n\tconst instituteId = useSelector((state) => state.instituteId);\r\n\tconst subjects = useSelector((state) => state.subjects);\r\n\tconst [data, setData] = useState([]);\r\n\tconst dispatch = useDispatch();\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tuseEffect(() => {\r\n\t\tif (_.isEmpty(subjects)) {\r\n\t\t\tdispatch(fetchSubjects());\r\n\t\t}\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst res = await axios(`/content/practice_context/${instituteId}/`);\r\n\t\t\tsetData(\r\n\t\t\t\t_.filter(res.data.data, (item) => item.subjects.includes(Number(id)))\r\n\t\t\t);\r\n\t\t\tsetLoading(false);\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tconsole.log(data);\r\n\t}, [data]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: \"rotate(180deg)\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tmarginTop: \"-2rem\",\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={() => history.push(\"/admin/practice\")}\r\n\t\t\t>\r\n\t\t\t\t<ArrowRightCircleIcon />\r\n\t\t\t</button>\r\n\t\t\t<h1\r\n\t\t\t\tclassName=\"text-align-center secondary\"\r\n\t\t\t\tstyle={{ color: getColorById(id) }}\r\n\t\t\t>\r\n\t\t\t\t{subjects[id] && subjects[id].name}\r\n\t\t\t</h1>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<CustomSpinner />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className={style.perSubjectPractice}>\r\n\t\t\t\t\t\t{data.map((item) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={style.subBlock}\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\thistory.push(`${location.pathname}/${item.id}`)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: getColorById() }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img src={item.dp} className={style.subSubjects} />\r\n\t\t\t\t\t\t\t\t\t<div className={style.title}>\r\n\t\t\t\t\t\t\t\t\t\t{item.display_name}\r\n\t\t\t\t\t\t\t\t\t\t<div className={style.subTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\tModules: {item.study_material.length}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PerSubjectPractice;\r\n","C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Shared\\SubjectModules.js",[],"C:\\Users\\Ayush\\Desktop\\Work\\refine\\src\\views\\Test\\SingleTest\\PracticeResults.jsx",["316","317","318","319","320","321","322","323","324"],"import React, { useState } from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport * as animationData from \"assets/lottie/correct1.json\";\r\nimport style from \"./practice.module.css\";\r\nimport {\r\n\tRiCheckboxCircleLine,\r\n\tRiCheckboxMultipleLine,\r\n\tRiTimerLine,\r\n} from \"react-icons/ri\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\nimport { GiArrowScope } from \"react-icons/gi\";\r\nimport { GrScorecard } from \"react-icons/gr\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst DisplayDataBlock = ({ icon, heading, score }) => (\r\n\t<div className={style.data}>\r\n\t\t{icon}\r\n\t\t<div className={style.text}>\r\n\t\t\t<div>{heading}</div>\r\n\t\t\t<div>{score}</div>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nconst TestResults = ({\r\n\tonClick,\r\n\tstats: { correct, attempt, score, totalQuestions, timeTaken, totalMarks },\r\n}) => {\r\n\tconst defaultOptions = {\r\n\t\tloop: false,\r\n\t\tautoPlay: true,\r\n\t\tanimationData: animationData.default,\r\n\t\trendererSettings: {\r\n\t\t\tpreserveAspectRatio: \"xMidYMid slice\",\r\n\t\t},\r\n\t};\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t<Lottie options={defaultOptions} height={200} width={200} />\r\n\t\t\t<button className=\"btn-primary\" onClick={() => history.goBack(-1)}>\r\n\t\t\t\tTake another test\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TestResults;\r\n",{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":1,"column":33,"nodeType":"331","messageId":"332","endLine":1,"endColumn":37},{"ruleId":"329","severity":1,"message":"333","line":8,"column":28,"nodeType":"331","messageId":"332","endLine":8,"endColumn":34},{"ruleId":"329","severity":1,"message":"334","line":1,"column":28,"nodeType":"331","messageId":"332","endLine":1,"endColumn":38},{"ruleId":"329","severity":1,"message":"335","line":2,"column":28,"nodeType":"331","messageId":"332","endLine":2,"endColumn":38},{"ruleId":"329","severity":1,"message":"336","line":3,"column":28,"nodeType":"331","messageId":"332","endLine":3,"endColumn":38},{"ruleId":"329","severity":1,"message":"337","line":4,"column":28,"nodeType":"331","messageId":"332","endLine":4,"endColumn":38},{"ruleId":"329","severity":1,"message":"338","line":5,"column":28,"nodeType":"331","messageId":"332","endLine":5,"endColumn":38},{"ruleId":"329","severity":1,"message":"339","line":6,"column":28,"nodeType":"331","messageId":"332","endLine":6,"endColumn":37},{"ruleId":"329","severity":1,"message":"340","line":7,"column":28,"nodeType":"331","messageId":"332","endLine":7,"endColumn":37},{"ruleId":"329","severity":1,"message":"341","line":9,"column":28,"nodeType":"331","messageId":"332","endLine":9,"endColumn":38},{"ruleId":"329","severity":1,"message":"342","line":48,"column":7,"nodeType":"331","messageId":"332","endLine":48,"endColumn":19},{"ruleId":"329","severity":1,"message":"343","line":65,"column":8,"nodeType":"331","messageId":"332","endLine":65,"endColumn":20},{"ruleId":"329","severity":1,"message":"344","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":16},{"ruleId":"329","severity":1,"message":"345","line":9,"column":8,"nodeType":"331","messageId":"332","endLine":9,"endColumn":21},{"ruleId":"329","severity":1,"message":"346","line":10,"column":8,"nodeType":"331","messageId":"332","endLine":10,"endColumn":16},{"ruleId":"329","severity":1,"message":"347","line":20,"column":9,"nodeType":"331","messageId":"332","endLine":20,"endColumn":16},{"ruleId":"329","severity":1,"message":"347","line":96,"column":9,"nodeType":"331","messageId":"332","endLine":96,"endColumn":16},{"ruleId":"329","severity":1,"message":"348","line":32,"column":7,"nodeType":"331","messageId":"332","endLine":32,"endColumn":15},{"ruleId":"349","severity":1,"message":"350","line":38,"column":6,"nodeType":"351","endLine":42,"endColumn":8},{"ruleId":"329","severity":1,"message":"352","line":61,"column":7,"nodeType":"331","messageId":"332","endLine":61,"endColumn":15},{"ruleId":"329","severity":1,"message":"353","line":1,"column":8,"nodeType":"331","messageId":"332","endLine":1,"endColumn":13},{"ruleId":"329","severity":1,"message":"354","line":2,"column":8,"nodeType":"331","messageId":"332","endLine":2,"endColumn":16},{"ruleId":"329","severity":1,"message":"355","line":3,"column":21,"nodeType":"331","messageId":"332","endLine":3,"endColumn":29},{"ruleId":"329","severity":1,"message":"356","line":4,"column":8,"nodeType":"331","messageId":"332","endLine":4,"endColumn":19},{"ruleId":"329","severity":1,"message":"347","line":22,"column":10,"nodeType":"331","messageId":"332","endLine":22,"endColumn":17},{"ruleId":"329","severity":1,"message":"357","line":22,"column":19,"nodeType":"331","messageId":"332","endLine":22,"endColumn":24},{"ruleId":"329","severity":1,"message":"358","line":22,"column":26,"nodeType":"331","messageId":"332","endLine":22,"endColumn":30},{"ruleId":"359","severity":1,"message":"360","line":30,"column":5,"nodeType":"361","endLine":30,"endColumn":7,"suggestions":"362"},{"ruleId":"329","severity":1,"message":"363","line":7,"column":8,"nodeType":"331","messageId":"332","endLine":7,"endColumn":9},{"ruleId":"359","severity":1,"message":"364","line":58,"column":5,"nodeType":"361","endLine":58,"endColumn":7,"suggestions":"365"},{"ruleId":"359","severity":1,"message":"366","line":65,"column":5,"nodeType":"361","endLine":65,"endColumn":15,"suggestions":"367"},{"ruleId":"359","severity":1,"message":"368","line":73,"column":5,"nodeType":"361","endLine":73,"endColumn":27,"suggestions":"369"},{"ruleId":"329","severity":1,"message":"370","line":128,"column":11,"nodeType":"331","messageId":"332","endLine":128,"endColumn":12},{"ruleId":"371","severity":1,"message":"372","line":140,"column":56,"nodeType":"373","messageId":"374","endLine":140,"endColumn":58},{"ruleId":"375","severity":1,"message":"376","line":181,"column":60,"nodeType":"377","messageId":"378","endLine":181,"endColumn":62},{"ruleId":"375","severity":1,"message":"376","line":196,"column":60,"nodeType":"377","messageId":"378","endLine":196,"endColumn":62},{"ruleId":"329","severity":1,"message":"379","line":208,"column":9,"nodeType":"331","messageId":"332","endLine":208,"endColumn":23},{"ruleId":"359","severity":1,"message":"380","line":276,"column":5,"nodeType":"361","endLine":276,"endColumn":22,"suggestions":"381"},{"ruleId":"329","severity":1,"message":"382","line":2,"column":10,"nodeType":"331","messageId":"332","endLine":2,"endColumn":15},{"ruleId":"329","severity":1,"message":"383","line":2,"column":17,"nodeType":"331","messageId":"332","endLine":2,"endColumn":29},{"ruleId":"329","severity":1,"message":"384","line":3,"column":8,"nodeType":"331","messageId":"332","endLine":3,"endColumn":17},{"ruleId":"329","severity":1,"message":"385","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":16},{"ruleId":"349","severity":1,"message":"350","line":146,"column":5,"nodeType":"351","endLine":146,"endColumn":48},{"ruleId":"329","severity":1,"message":"386","line":5,"column":10,"nodeType":"331","messageId":"332","endLine":5,"endColumn":28},{"ruleId":"329","severity":1,"message":"387","line":2,"column":7,"nodeType":"331","messageId":"332","endLine":2,"endColumn":14},{"ruleId":"388","severity":1,"message":"389","line":33,"column":22,"nodeType":"377","messageId":"390","endLine":33,"endColumn":23},{"ruleId":"329","severity":1,"message":"383","line":2,"column":17,"nodeType":"331","messageId":"332","endLine":2,"endColumn":29},{"ruleId":"329","severity":1,"message":"384","line":3,"column":8,"nodeType":"331","messageId":"332","endLine":3,"endColumn":17},{"ruleId":"375","severity":1,"message":"391","line":22,"column":46,"nodeType":"377","messageId":"378","endLine":22,"endColumn":48},{"ruleId":"375","severity":1,"message":"391","line":24,"column":30,"nodeType":"377","messageId":"378","endLine":24,"endColumn":32},{"ruleId":"375","severity":1,"message":"391","line":39,"column":32,"nodeType":"377","messageId":"378","endLine":39,"endColumn":34},{"ruleId":"329","severity":1,"message":"353","line":12,"column":8,"nodeType":"331","messageId":"332","endLine":12,"endColumn":13},{"ruleId":"329","severity":1,"message":"355","line":13,"column":21,"nodeType":"331","messageId":"332","endLine":13,"endColumn":29},{"ruleId":"329","severity":1,"message":"392","line":18,"column":8,"nodeType":"331","messageId":"332","endLine":18,"endColumn":20},{"ruleId":"359","severity":1,"message":"393","line":27,"column":5,"nodeType":"361","endLine":27,"endColumn":7,"suggestions":"394"},{"ruleId":"395","severity":1,"message":"396","line":5,"column":1,"nodeType":"397","endLine":12,"endColumn":3},{"ruleId":"329","severity":1,"message":"398","line":2,"column":10,"nodeType":"331","messageId":"332","endLine":2,"endColumn":13},{"ruleId":"329","severity":1,"message":"399","line":3,"column":8,"nodeType":"331","messageId":"332","endLine":3,"endColumn":20},{"ruleId":"329","severity":1,"message":"400","line":2,"column":10,"nodeType":"331","messageId":"332","endLine":2,"endColumn":25},{"ruleId":"395","severity":1,"message":"396","line":33,"column":1,"nodeType":"397","endLine":44,"endColumn":3},{"ruleId":"401","severity":1,"message":"402","line":39,"column":3,"nodeType":"403","messageId":"378","endLine":40,"endColumn":56},{"ruleId":"329","severity":1,"message":"404","line":15,"column":8,"nodeType":"331","messageId":"332","endLine":15,"endColumn":15},{"ruleId":"359","severity":1,"message":"405","line":23,"column":5,"nodeType":"361","endLine":23,"endColumn":7,"suggestions":"406"},{"ruleId":"329","severity":1,"message":"357","line":26,"column":19,"nodeType":"331","messageId":"332","endLine":26,"endColumn":24},{"ruleId":"329","severity":1,"message":"407","line":26,"column":26,"nodeType":"331","messageId":"332","endLine":26,"endColumn":31},{"ruleId":"329","severity":1,"message":"408","line":1,"column":28,"nodeType":"331","messageId":"332","endLine":1,"endColumn":43},{"ruleId":"329","severity":1,"message":"409","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":23},{"ruleId":"329","severity":1,"message":"410","line":16,"column":9,"nodeType":"331","messageId":"332","endLine":16,"endColumn":19},{"ruleId":"329","severity":1,"message":"411","line":16,"column":21,"nodeType":"331","messageId":"332","endLine":16,"endColumn":34},{"ruleId":"329","severity":1,"message":"357","line":17,"column":19,"nodeType":"331","messageId":"332","endLine":17,"endColumn":24},{"ruleId":"329","severity":1,"message":"407","line":17,"column":26,"nodeType":"331","messageId":"332","endLine":17,"endColumn":31},{"ruleId":"359","severity":1,"message":"393","line":26,"column":5,"nodeType":"361","endLine":26,"endColumn":7,"suggestions":"412"},{"ruleId":"359","severity":1,"message":"413","line":41,"column":5,"nodeType":"361","endLine":41,"endColumn":7,"suggestions":"414"},{"ruleId":"329","severity":1,"message":"355","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"355","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"415","line":2,"column":8,"nodeType":"331","messageId":"332","endLine":2,"endColumn":19},{"ruleId":"329","severity":1,"message":"416","line":3,"column":24,"nodeType":"331","messageId":"332","endLine":3,"endColumn":33},{"ruleId":"329","severity":1,"message":"417","line":3,"column":35,"nodeType":"331","messageId":"332","endLine":3,"endColumn":51},{"ruleId":"329","severity":1,"message":"418","line":9,"column":10,"nodeType":"331","messageId":"332","endLine":9,"endColumn":21},{"ruleId":"329","severity":1,"message":"419","line":13,"column":8,"nodeType":"331","messageId":"332","endLine":13,"endColumn":23},{"ruleId":"329","severity":1,"message":"420","line":14,"column":8,"nodeType":"331","messageId":"332","endLine":14,"endColumn":19},{"ruleId":"359","severity":1,"message":"364","line":61,"column":5,"nodeType":"361","endLine":61,"endColumn":7,"suggestions":"421"},{"ruleId":"359","severity":1,"message":"366","line":68,"column":5,"nodeType":"361","endLine":68,"endColumn":15,"suggestions":"422"},{"ruleId":"359","severity":1,"message":"368","line":80,"column":5,"nodeType":"361","endLine":80,"endColumn":27,"suggestions":"423"},{"ruleId":"329","severity":1,"message":"370","line":135,"column":11,"nodeType":"331","messageId":"332","endLine":135,"endColumn":12},{"ruleId":"371","severity":1,"message":"372","line":147,"column":56,"nodeType":"373","messageId":"374","endLine":147,"endColumn":58},{"ruleId":"375","severity":1,"message":"376","line":187,"column":60,"nodeType":"377","messageId":"378","endLine":187,"endColumn":62},{"ruleId":"375","severity":1,"message":"376","line":202,"column":60,"nodeType":"377","messageId":"378","endLine":202,"endColumn":62},{"ruleId":"359","severity":1,"message":"380","line":276,"column":5,"nodeType":"361","endLine":276,"endColumn":22,"suggestions":"424"},{"ruleId":"359","severity":1,"message":"425","line":25,"column":5,"nodeType":"361","endLine":25,"endColumn":7,"suggestions":"426"},{"ruleId":"359","severity":1,"message":"427","line":36,"column":5,"nodeType":"361","endLine":36,"endColumn":7,"suggestions":"428"},{"ruleId":"349","severity":1,"message":"350","line":74,"column":10,"nodeType":"351","endLine":74,"endColumn":61},{"ruleId":"329","severity":1,"message":"355","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"429","line":6,"column":2,"nodeType":"331","messageId":"332","endLine":6,"endColumn":22},{"ruleId":"329","severity":1,"message":"430","line":7,"column":2,"nodeType":"331","messageId":"332","endLine":7,"endColumn":24},{"ruleId":"329","severity":1,"message":"431","line":8,"column":2,"nodeType":"331","messageId":"332","endLine":8,"endColumn":13},{"ruleId":"329","severity":1,"message":"432","line":10,"column":10,"nodeType":"331","messageId":"332","endLine":10,"endColumn":23},{"ruleId":"329","severity":1,"message":"433","line":11,"column":10,"nodeType":"331","messageId":"332","endLine":11,"endColumn":22},{"ruleId":"329","severity":1,"message":"434","line":12,"column":10,"nodeType":"331","messageId":"332","endLine":12,"endColumn":21},{"ruleId":"329","severity":1,"message":"435","line":13,"column":22,"nodeType":"331","messageId":"332","endLine":13,"endColumn":33},{"ruleId":"329","severity":1,"message":"436","line":15,"column":7,"nodeType":"331","messageId":"332","endLine":15,"endColumn":23},"no-native-reassign",["437"],"no-negated-in-lhs",["438"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'DPIcon' is defined but never used.","'Group16681' is defined but never used.","'Group16682' is defined but never used.","'Group16683' is defined but never used.","'Group16684' is defined but never used.","'Group16685' is defined but never used.","'Group1668' is defined but never used.","'Group1674' is defined but never used.","'EditSquare' is defined but never used.","'ProgressCard' is assigned a value but never used.","'listSubjects' is assigned a value but never used.","'FaLeaf' is defined but never used.","'CustomSpinner' is defined but never used.","'Practice' is defined but never used.","'loading' is assigned a value but never used.","'Continue' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RsCorner' is assigned a value but never used.","'axios' is defined but never used.","'Collapse' is defined but never used.","'useState' is defined but never used.","'Collapsible' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isMount'. Either include them or remove the dependency array.","ArrayExpression",["439"],"'_' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchTestMeta'. Either include them or remove the dependency array.",["440"],"React Hook useEffect has a missing dependency: 'changeQuestion'. Either include it or remove the dependency array.",["441"],"React Hook useEffect has a missing dependency: 'studentAnswers'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setInitialValues' needs the current value of 'studentAnswers'.",["442"],"'h' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'correctAnswers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'calculateStats' and 'endTest'. Either include them or remove the dependency array.",["443"],"'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'TextError' is defined but never used.","'signIn' is defined but never used.","'USER_LOGIN_SUCCESS' is defined but never used.","'history' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Expected '===' and instead saw '=='.","'getColorById' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["444"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'css' is defined but never used.","'SquareLoader' is defined but never used.","'FETCH_READ_FAIL' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'isMount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'resetReadables'. Either include them or remove the dependency array.",["445"],"'types' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'fetchSubjects' is defined but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.",["446"],"React Hook useEffect has a missing dependency: 'fetchBook'. Either include it or remove the dependency array.",["447"],"'ProgressBar' is defined but never used.","'useFormik' is defined but never used.","'useFormikContext' is defined but never used.","'FaAngleLeft' is defined but never used.","'QuestionsScroll' is defined but never used.","'CustomModal' is defined but never used.",["448"],["449"],["450"],["451"],"React Hook useEffect has missing dependencies: 'dispatch' and 'subjects'. Either include them or remove the dependency array.",["452"],"React Hook useEffect has missing dependencies: 'id' and 'instituteId'. Either include them or remove the dependency array.",["453"],"'RiCheckboxCircleLine' is defined but never used.","'RiCheckboxMultipleLine' is defined but never used.","'RiTimerLine' is defined but never used.","'FaTimesCircle' is defined but never used.","'GiArrowScope' is defined but never used.","'GrScorecard' is defined but never used.","'useLocation' is defined but never used.","'DisplayDataBlock' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"464","fix":"468"},{"desc":"469","fix":"470"},{"desc":"456","fix":"471"},{"desc":"458","fix":"472"},{"desc":"460","fix":"473"},{"desc":"462","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},"Update the dependencies array to be: [dispatch, isMount]",{"range":"479","text":"480"},"Update the dependencies array to be: [fetchData, fetchTestMeta]",{"range":"481","text":"482"},"Update the dependencies array to be: [changeQuestion, testData]",{"range":"483","text":"484"},"Update the dependencies array to be: [currentQuestionIndex, studentAnswers]",{"range":"485","text":"486"},"Update the dependencies array to be: [calculateStats, endTest, studentTestData]",{"range":"487","text":"488"},"Update the dependencies array to be: [dispatch]",{"range":"489","text":"490"},"Update the dependencies array to be: [dispatch, resetReadables]",{"range":"491","text":"492"},{"range":"493","text":"490"},"Update the dependencies array to be: [fetchBook]",{"range":"494","text":"495"},{"range":"496","text":"482"},{"range":"497","text":"484"},{"range":"498","text":"486"},{"range":"499","text":"488"},"Update the dependencies array to be: [dispatch, subjects]",{"range":"500","text":"501"},"Update the dependencies array to be: [id, instituteId]",{"range":"502","text":"503"},[1255,1257],"[dispatch, isMount]",[2028,2030],"[fetchData, fetchTestMeta]",[2146,2156],"[changeQuestion, testData]",[2406,2428],"[currentQuestionIndex, studentAnswers]",[7650,7667],"[calculateStats, endTest, studentTestData]",[1363,1365],"[dispatch]",[922,924],"[dispatch, resetReadables]",[1114,1116],[1419,1421],"[fetchBook]",[2394,2396],[2512,2522],[2893,2915],[7894,7911],[1043,1045],"[dispatch, subjects]",[1343,1345],"[id, instituteId]"]